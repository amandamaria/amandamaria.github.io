{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport React, { useCallback, useEffect, useRef, useMemo, isValidElement } from 'react';\nimport Downshift from 'downshift';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport { TextField, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useInput, FieldTitle, useSuggestions, warning, mergeRefs } from 'ra-core';\nimport debounce from 'lodash/debounce';\nimport InputHelperText from './InputHelperText';\nimport AutocompleteSuggestionList from './AutocompleteSuggestionList';\nimport AutocompleteSuggestionItem from './AutocompleteSuggestionItem';\nimport { AutocompleteInputLoader } from './AutocompleteInputLoader';\nimport { useSupportCreateSuggestion } from './useSupportCreateSuggestion';\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteArrayInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * Note that you must also specify the `matchSuggestion` prop\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue);\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectInput source=\"gender\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteArrayInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <TextField> component\n *\n * @example\n * <AutocompleteArrayInput source=\"author_id\" options={{ color: 'secondary' }} />\n */\n\nvar AutocompleteArrayInput = function (props) {\n  var allowDuplicates = props.allowDuplicates,\n      allowEmpty = props.allowEmpty,\n      classesOverride = props.classes,\n      _a = props.choices,\n      choices = _a === void 0 ? [] : _a,\n      create = props.create,\n      createLabel = props.createLabel,\n      createItemLabel = props.createItemLabel,\n      createValue = props.createValue,\n      _b = props.debounce,\n      debounceDelay = _b === void 0 ? 250 : _b,\n      disabled = props.disabled,\n      emptyText = props.emptyText,\n      emptyValue = props.emptyValue,\n      format = props.format,\n      fullWidth = props.fullWidth,\n      helperText = props.helperText,\n      idOverride = props.id,\n      inputOverride = props.input,\n      isRequiredOverride = props.isRequired,\n      label = props.label,\n      loaded = props.loaded,\n      loading = props.loading,\n      limitChoicesToValue = props.limitChoicesToValue,\n      _c = props.margin,\n      margin = _c === void 0 ? 'dense' : _c,\n      matchSuggestion = props.matchSuggestion,\n      metaOverride = props.meta,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onCreate = props.onCreate,\n      onFocus = props.onFocus,\n      _d = props.options,\n      _e = _d === void 0 ? {} : _d,\n      suggestionsContainerProps = _e.suggestionsContainerProps,\n      labelProps = _e.labelProps,\n      InputProps = _e.InputProps,\n      options = __rest(_e, [\"suggestionsContainerProps\", \"labelProps\", \"InputProps\"]),\n      _f = props.optionText,\n      optionText = _f === void 0 ? 'name' : _f,\n      _g = props.optionValue,\n      optionValue = _g === void 0 ? 'id' : _g,\n      parse = props.parse,\n      resource = props.resource,\n      setFilter = props.setFilter,\n      shouldRenderSuggestionsOverride = props.shouldRenderSuggestions,\n      source = props.source,\n      suggestionLimit = props.suggestionLimit,\n      _h = props.translateChoice,\n      translateChoice = _h === void 0 ? true : _h,\n      validate = props.validate,\n      _j = props.variant,\n      variant = _j === void 0 ? 'filled' : _j,\n      rest = __rest(props, [\"allowDuplicates\", \"allowEmpty\", \"classes\", \"choices\", \"create\", \"createLabel\", \"createItemLabel\", \"createValue\", \"debounce\", \"disabled\", \"emptyText\", \"emptyValue\", \"format\", \"fullWidth\", \"helperText\", \"id\", \"input\", \"isRequired\", \"label\", \"loaded\", \"loading\", \"limitChoicesToValue\", \"margin\", \"matchSuggestion\", \"meta\", \"onBlur\", \"onChange\", \"onCreate\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"setFilter\", \"shouldRenderSuggestions\", \"source\", \"suggestionLimit\", \"translateChoice\", \"validate\", \"variant\"]);\n\n  warning(isValidElement(optionText) && !matchSuggestion, \"If the optionText prop is a React element, you must also specify the matchSuggestion prop:\\n<AutocompleteArrayInput\\n    matchSuggestion={(filterValue, suggestion) => true}\\n/>\\n        \");\n  warning(source === undefined, \"If you're not wrapping the AutocompleteArrayInput inside a ReferenceArrayInput, you must provide the source prop\");\n  warning(choices === undefined, \"If you're not wrapping the AutocompleteArrayInput inside a ReferenceArrayInput, you must provide the choices prop\");\n  var classes = useStyles(props);\n  var inputEl = useRef();\n  var anchorEl = useRef();\n\n  var _k = useInput(__assign({\n    format: format,\n    id: idOverride,\n    input: inputOverride,\n    meta: metaOverride,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _k.id,\n      input = _k.input,\n      isRequired = _k.isRequired,\n      _l = _k.meta,\n      touched = _l.touched,\n      error = _l.error,\n      submitError = _l.submitError;\n\n  var values = input.value || emptyArray;\n\n  var _m = React.useState(''),\n      filterValue = _m[0],\n      setFilterValue = _m[1];\n\n  var getSuggestionFromValue = useCallback(function (value) {\n    return choices.find(function (choice) {\n      return get(choice, optionValue) === value;\n    });\n  }, [choices, optionValue]);\n  var selectedItems = useMemo(function () {\n    return values.map(getSuggestionFromValue);\n  }, [getSuggestionFromValue, values]);\n\n  var _o = useSuggestions({\n    allowDuplicates: allowDuplicates,\n    allowEmpty: allowEmpty,\n    choices: choices,\n    emptyText: emptyText,\n    emptyValue: emptyValue,\n    limitChoicesToValue: limitChoicesToValue,\n    matchSuggestion: matchSuggestion,\n    optionText: optionText,\n    optionValue: optionValue,\n    selectedItem: selectedItems,\n    suggestionLimit: suggestionLimit,\n    translateChoice: translateChoice\n  }),\n      getChoiceText = _o.getChoiceText,\n      getChoiceValue = _o.getChoiceValue,\n      getSuggestions = _o.getSuggestions; // eslint-disable-next-line\n\n\n  var debouncedSetFilter = useCallback(debounce(setFilter || DefaultSetFilter, debounceDelay), [setFilter, debounceDelay]);\n  var handleFilterChange = useCallback(function (eventOrValue) {\n    var event = eventOrValue;\n    var value = event.target ? event.target.value : eventOrValue;\n    setFilterValue(value);\n\n    if (setFilter) {\n      debouncedSetFilter(value);\n    }\n  }, [debouncedSetFilter, setFilter, setFilterValue]); // We must reset the filter every time the value changes to ensure we\n  // display at least some choices even if the input has a value.\n  // Otherwise, it would only display the currently selected one and the user\n  // would have to first clear the input before seeing any other choices\n\n  useEffect(function () {\n    handleFilterChange('');\n  }, [values.join(','), handleFilterChange]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleKeyDown = useCallback(function (event) {\n    // Remove latest item from array when user hits backspace with no text\n    if (selectedItems.length && !filterValue.length && event.key === 'Backspace') {\n      var newSelectedItems = selectedItems.slice(0, selectedItems.length - 1);\n      input.onChange(newSelectedItems.map(getChoiceValue));\n    }\n  }, [filterValue.length, getChoiceValue, input, selectedItems]);\n  var handleChange = useCallback(function (item, newItem) {\n    var finalItem = newItem || item;\n    var newSelectedItems = !allowDuplicates && selectedItems.includes(finalItem) ? __spreadArrays(selectedItems) : __spreadArrays(selectedItems, [finalItem]);\n    setFilterValue('');\n    input.onChange(newSelectedItems.map(getChoiceValue));\n  }, [allowDuplicates, getChoiceValue, input, selectedItems, setFilterValue]);\n\n  var _p = useSupportCreateSuggestion({\n    create: create,\n    createLabel: createLabel,\n    createItemLabel: createItemLabel,\n    createValue: createValue,\n    handleChange: handleChange,\n    filter: filterValue,\n    onCreate: onCreate\n  }),\n      getCreateItem = _p.getCreateItem,\n      handleChangeWithCreateSupport = _p.handleChange,\n      createElement = _p.createElement;\n\n  var handleDelete = useCallback(function (item) {\n    return function () {\n      var newSelectedItems = __spreadArrays(selectedItems);\n\n      newSelectedItems.splice(newSelectedItems.indexOf(item), 1);\n      input.onChange(newSelectedItems.map(getChoiceValue));\n    };\n  }, [input, selectedItems, getChoiceValue]); // This function ensures that the suggestion list stay aligned to the\n  // input element even if it moves (because user scrolled for example)\n\n  var updateAnchorEl = function () {\n    if (!inputEl.current) {\n      return;\n    }\n\n    var inputPosition = inputEl.current.getBoundingClientRect(); // It works by implementing a mock element providing the only method used\n    // by the PopOver component, getBoundingClientRect, which will return a\n    // position based on the input position\n\n    if (!anchorEl.current) {\n      anchorEl.current = {\n        getBoundingClientRect: function () {\n          return inputPosition;\n        }\n      };\n    } else {\n      var anchorPosition = anchorEl.current.getBoundingClientRect();\n\n      if (anchorPosition.x !== inputPosition.x || anchorPosition.y !== inputPosition.y) {\n        anchorEl.current = {\n          getBoundingClientRect: function () {\n            return inputPosition;\n          }\n        };\n      }\n    }\n  };\n\n  var storeInputRef = function (input) {\n    inputEl.current = input;\n    updateAnchorEl();\n  };\n\n  var handleBlur = useCallback(function (event) {\n    setFilterValue('');\n    handleFilterChange('');\n    input.onBlur(event);\n  }, [handleFilterChange, input, setFilterValue]);\n  var handleFocus = useCallback(function (openMenu) {\n    return function (event) {\n      openMenu(event);\n      input.onFocus(event);\n    };\n  }, [input]);\n  var handleClick = useCallback(function (openMenu) {\n    return function (event) {\n      if (event.target === inputEl.current) {\n        openMenu(event);\n      }\n    };\n  }, []);\n\n  var shouldRenderSuggestions = function (val) {\n    if (shouldRenderSuggestionsOverride !== undefined && typeof shouldRenderSuggestionsOverride === 'function') {\n      return shouldRenderSuggestionsOverride(val);\n    }\n\n    return true;\n  };\n\n  var _q = InputProps || {},\n      inputRef = _q.inputRef,\n      InputPropsWithoutInputRef = __rest(_q, [\"inputRef\"]);\n\n  return React.createElement(React.Fragment, null, React.createElement(Downshift, __assign({\n    inputValue: filterValue,\n    onChange: handleChangeWithCreateSupport,\n    selectedItem: selectedItems,\n    itemToString: function (item) {\n      return getChoiceValue(item);\n    }\n  }, rest), function (_a) {\n    var _b, _c;\n\n    var getInputProps = _a.getInputProps,\n        getItemProps = _a.getItemProps,\n        getLabelProps = _a.getLabelProps,\n        getMenuProps = _a.getMenuProps,\n        isOpen = _a.isOpen,\n        suggestionFilter = _a.inputValue,\n        highlightedIndex = _a.highlightedIndex,\n        openMenu = _a.openMenu;\n    var isMenuOpen = isOpen && shouldRenderSuggestions(suggestionFilter);\n\n    var _d = getInputProps({\n      onBlur: handleBlur,\n      onFocus: handleFocus(openMenu),\n      onClick: handleClick(openMenu),\n      onKeyDown: handleKeyDown\n    }),\n        idFromDownshift = _d.id,\n        onBlur = _d.onBlur,\n        onChange = _d.onChange,\n        onFocus = _d.onFocus,\n        ref = _d.ref,\n        color = _d.color,\n        size = _d.size,\n        inputProps = __rest(_d, [\"id\", \"onBlur\", \"onChange\", \"onFocus\", \"ref\", \"color\", \"size\"]);\n\n    var suggestions = __spreadArrays(getSuggestions(suggestionFilter), onCreate || create ? [getCreateItem()] : []);\n\n    return React.createElement(\"div\", {\n      className: classes.container\n    }, React.createElement(TextField, __assign({\n      id: id,\n      fullWidth: fullWidth,\n      InputProps: __assign({\n        inputRef: mergeRefs([storeInputRef, inputRef]),\n        classes: {\n          root: classNames(classes.inputRoot, (_b = {}, _b[classes.inputRootFilled] = variant === 'filled', _b)),\n          input: classes.inputInput\n        },\n        startAdornment: React.createElement(\"div\", {\n          className: classNames((_c = {}, _c[classes.chipContainerFilled] = variant === 'filled', _c[classes.chipContainerOutlined] = variant === 'outlined', _c))\n        }, selectedItems.map(function (item, index) {\n          return React.createElement(Chip, {\n            key: index,\n            tabIndex: -1,\n            label: getChoiceText(item),\n            className: classes.chip,\n            onDelete: handleDelete(item)\n          });\n        })),\n        endAdornment: loading && React.createElement(AutocompleteInputLoader, null),\n        onBlur: onBlur,\n        onChange: function (event) {\n          handleFilterChange(event);\n          onChange(event);\n        },\n        onFocus: onFocus\n      }, InputPropsWithoutInputRef),\n      error: !!(touched && (error || submitError)),\n      label: React.createElement(FieldTitle, __assign({\n        label: label\n      }, labelProps, {\n        source: source,\n        resource: resource,\n        isRequired: typeof isRequiredOverride !== 'undefined' ? isRequiredOverride : isRequired\n      })),\n      InputLabelProps: getLabelProps({\n        htmlFor: id\n      }),\n      helperText: React.createElement(InputHelperText, {\n        touched: touched,\n        error: error || submitError,\n        helperText: helperText\n      }),\n      variant: variant,\n      margin: margin,\n      color: color,\n      size: size,\n      disabled: disabled\n    }, inputProps, options)), React.createElement(AutocompleteSuggestionList, {\n      isOpen: isMenuOpen,\n      menuProps: getMenuProps({}, // https://github.com/downshift-js/downshift/issues/235\n      {\n        suppressRefError: true\n      }),\n      inputEl: inputEl.current,\n      suggestionsContainerProps: suggestionsContainerProps,\n      className: classes.suggestionsContainer\n    }, suggestions.map(function (suggestion, index) {\n      return React.createElement(AutocompleteSuggestionItem, __assign({\n        key: getChoiceValue(suggestion),\n        createValue: createValue,\n        suggestion: suggestion,\n        index: index,\n        highlightedIndex: highlightedIndex,\n        isSelected: selectedItems.map(getChoiceValue).includes(getChoiceValue(suggestion)),\n        filterValue: filterValue,\n        getSuggestionText: getChoiceText\n      }, getItemProps({\n        item: suggestion\n      })));\n    })));\n  }), createElement);\n};\n\nvar emptyArray = [];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      flexGrow: 1,\n      position: 'relative'\n    },\n    suggestionsContainer: {\n      zIndex: theme.zIndex.modal\n    },\n    chip: {\n      margin: theme.spacing(0.5, 0.5, 0.5, 0)\n    },\n    chipContainerFilled: {\n      margin: '27px 12px 10px 0'\n    },\n    chipContainerOutlined: {\n      margin: '12px 12px 10px 0'\n    },\n    inputRoot: {\n      flexWrap: 'wrap'\n    },\n    inputRootFilled: {\n      flexWrap: 'wrap',\n      '& $chip': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)'\n      }\n    },\n    inputInput: {\n      width: 'auto',\n      flexGrow: 1\n    }\n  };\n}, {\n  name: 'RaAutocompleteArrayInput'\n});\n\nvar DefaultSetFilter = function () {};\n\nexport default AutocompleteArrayInput;","map":{"version":3,"sources":["C:/Users/Amanda/Documents/git/amandamaria.github.io/obama-admin/obamaadmin/node_modules/ra-ui-materialui/esm/input/AutocompleteArrayInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArrays","il","r","Array","k","a","j","jl","React","useCallback","useEffect","useRef","useMemo","isValidElement","Downshift","classNames","get","TextField","Chip","makeStyles","useInput","FieldTitle","useSuggestions","warning","mergeRefs","debounce","InputHelperText","AutocompleteSuggestionList","AutocompleteSuggestionItem","AutocompleteInputLoader","useSupportCreateSuggestion","AutocompleteArrayInput","props","allowDuplicates","allowEmpty","classesOverride","classes","_a","choices","create","createLabel","createItemLabel","createValue","_b","debounceDelay","disabled","emptyText","emptyValue","format","fullWidth","helperText","idOverride","id","inputOverride","input","isRequiredOverride","isRequired","label","loaded","loading","limitChoicesToValue","_c","margin","matchSuggestion","metaOverride","meta","onBlur","onChange","onCreate","onFocus","_d","options","_e","suggestionsContainerProps","labelProps","InputProps","_f","optionText","_g","optionValue","parse","resource","setFilter","shouldRenderSuggestionsOverride","shouldRenderSuggestions","source","suggestionLimit","_h","translateChoice","validate","_j","variant","rest","undefined","useStyles","inputEl","anchorEl","_k","_l","touched","error","submitError","values","value","emptyArray","_m","useState","filterValue","setFilterValue","getSuggestionFromValue","find","choice","selectedItems","map","_o","selectedItem","getChoiceText","getChoiceValue","getSuggestions","debouncedSetFilter","DefaultSetFilter","handleFilterChange","eventOrValue","event","target","join","handleKeyDown","key","newSelectedItems","slice","handleChange","item","newItem","finalItem","includes","_p","filter","getCreateItem","handleChangeWithCreateSupport","createElement","handleDelete","splice","updateAnchorEl","current","inputPosition","getBoundingClientRect","anchorPosition","x","y","storeInputRef","handleBlur","handleFocus","openMenu","handleClick","val","_q","inputRef","InputPropsWithoutInputRef","Fragment","inputValue","itemToString","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","suggestionFilter","highlightedIndex","isMenuOpen","onClick","onKeyDown","idFromDownshift","ref","color","size","inputProps","suggestions","className","container","root","inputRoot","inputRootFilled","inputInput","startAdornment","chipContainerFilled","chipContainerOutlined","index","tabIndex","chip","onDelete","endAdornment","InputLabelProps","htmlFor","menuProps","suppressRefError","suggestionsContainer","suggestion","isSelected","getSuggestionText","theme","flexGrow","position","zIndex","modal","spacing","flexWrap","backgroundColor","palette","type","width","name"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport React, { useCallback, useEffect, useRef, useMemo, isValidElement, } from 'react';\nimport Downshift from 'downshift';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport { TextField, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useInput, FieldTitle, useSuggestions, warning, mergeRefs, } from 'ra-core';\nimport debounce from 'lodash/debounce';\nimport InputHelperText from './InputHelperText';\nimport AutocompleteSuggestionList from './AutocompleteSuggestionList';\nimport AutocompleteSuggestionItem from './AutocompleteSuggestionItem';\nimport { AutocompleteInputLoader } from './AutocompleteInputLoader';\nimport { useSupportCreateSuggestion, } from './useSupportCreateSuggestion';\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteArrayInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * Note that you must also specify the `matchSuggestion` prop\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue);\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectInput source=\"gender\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteArrayInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <TextField> component\n *\n * @example\n * <AutocompleteArrayInput source=\"author_id\" options={{ color: 'secondary' }} />\n */\nvar AutocompleteArrayInput = function (props) {\n    var allowDuplicates = props.allowDuplicates, allowEmpty = props.allowEmpty, classesOverride = props.classes, _a = props.choices, choices = _a === void 0 ? [] : _a, create = props.create, createLabel = props.createLabel, createItemLabel = props.createItemLabel, createValue = props.createValue, _b = props.debounce, debounceDelay = _b === void 0 ? 250 : _b, disabled = props.disabled, emptyText = props.emptyText, emptyValue = props.emptyValue, format = props.format, fullWidth = props.fullWidth, helperText = props.helperText, idOverride = props.id, inputOverride = props.input, isRequiredOverride = props.isRequired, label = props.label, loaded = props.loaded, loading = props.loading, limitChoicesToValue = props.limitChoicesToValue, _c = props.margin, margin = _c === void 0 ? 'dense' : _c, matchSuggestion = props.matchSuggestion, metaOverride = props.meta, onBlur = props.onBlur, onChange = props.onChange, onCreate = props.onCreate, onFocus = props.onFocus, _d = props.options, _e = _d === void 0 ? {} : _d, suggestionsContainerProps = _e.suggestionsContainerProps, labelProps = _e.labelProps, InputProps = _e.InputProps, options = __rest(_e, [\"suggestionsContainerProps\", \"labelProps\", \"InputProps\"]), _f = props.optionText, optionText = _f === void 0 ? 'name' : _f, _g = props.optionValue, optionValue = _g === void 0 ? 'id' : _g, parse = props.parse, resource = props.resource, setFilter = props.setFilter, shouldRenderSuggestionsOverride = props.shouldRenderSuggestions, source = props.source, suggestionLimit = props.suggestionLimit, _h = props.translateChoice, translateChoice = _h === void 0 ? true : _h, validate = props.validate, _j = props.variant, variant = _j === void 0 ? 'filled' : _j, rest = __rest(props, [\"allowDuplicates\", \"allowEmpty\", \"classes\", \"choices\", \"create\", \"createLabel\", \"createItemLabel\", \"createValue\", \"debounce\", \"disabled\", \"emptyText\", \"emptyValue\", \"format\", \"fullWidth\", \"helperText\", \"id\", \"input\", \"isRequired\", \"label\", \"loaded\", \"loading\", \"limitChoicesToValue\", \"margin\", \"matchSuggestion\", \"meta\", \"onBlur\", \"onChange\", \"onCreate\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"setFilter\", \"shouldRenderSuggestions\", \"source\", \"suggestionLimit\", \"translateChoice\", \"validate\", \"variant\"]);\n    warning(isValidElement(optionText) && !matchSuggestion, \"If the optionText prop is a React element, you must also specify the matchSuggestion prop:\\n<AutocompleteArrayInput\\n    matchSuggestion={(filterValue, suggestion) => true}\\n/>\\n        \");\n    warning(source === undefined, \"If you're not wrapping the AutocompleteArrayInput inside a ReferenceArrayInput, you must provide the source prop\");\n    warning(choices === undefined, \"If you're not wrapping the AutocompleteArrayInput inside a ReferenceArrayInput, you must provide the choices prop\");\n    var classes = useStyles(props);\n    var inputEl = useRef();\n    var anchorEl = useRef();\n    var _k = useInput(__assign({ format: format, id: idOverride, input: inputOverride, meta: metaOverride, onBlur: onBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        parse: parse,\n        resource: resource,\n        source: source,\n        validate: validate }, rest)), id = _k.id, input = _k.input, isRequired = _k.isRequired, _l = _k.meta, touched = _l.touched, error = _l.error, submitError = _l.submitError;\n    var values = input.value || emptyArray;\n    var _m = React.useState(''), filterValue = _m[0], setFilterValue = _m[1];\n    var getSuggestionFromValue = useCallback(function (value) { return choices.find(function (choice) { return get(choice, optionValue) === value; }); }, [choices, optionValue]);\n    var selectedItems = useMemo(function () { return values.map(getSuggestionFromValue); }, [\n        getSuggestionFromValue,\n        values,\n    ]);\n    var _o = useSuggestions({\n        allowDuplicates: allowDuplicates,\n        allowEmpty: allowEmpty,\n        choices: choices,\n        emptyText: emptyText,\n        emptyValue: emptyValue,\n        limitChoicesToValue: limitChoicesToValue,\n        matchSuggestion: matchSuggestion,\n        optionText: optionText,\n        optionValue: optionValue,\n        selectedItem: selectedItems,\n        suggestionLimit: suggestionLimit,\n        translateChoice: translateChoice,\n    }), getChoiceText = _o.getChoiceText, getChoiceValue = _o.getChoiceValue, getSuggestions = _o.getSuggestions;\n    // eslint-disable-next-line\n    var debouncedSetFilter = useCallback(debounce(setFilter || DefaultSetFilter, debounceDelay), [setFilter, debounceDelay]);\n    var handleFilterChange = useCallback(function (eventOrValue) {\n        var event = eventOrValue;\n        var value = event.target\n            ? event.target.value\n            : eventOrValue;\n        setFilterValue(value);\n        if (setFilter) {\n            debouncedSetFilter(value);\n        }\n    }, [debouncedSetFilter, setFilter, setFilterValue]);\n    // We must reset the filter every time the value changes to ensure we\n    // display at least some choices even if the input has a value.\n    // Otherwise, it would only display the currently selected one and the user\n    // would have to first clear the input before seeing any other choices\n    useEffect(function () {\n        handleFilterChange('');\n    }, [values.join(','), handleFilterChange]); // eslint-disable-line react-hooks/exhaustive-deps\n    var handleKeyDown = useCallback(function (event) {\n        // Remove latest item from array when user hits backspace with no text\n        if (selectedItems.length &&\n            !filterValue.length &&\n            event.key === 'Backspace') {\n            var newSelectedItems = selectedItems.slice(0, selectedItems.length - 1);\n            input.onChange(newSelectedItems.map(getChoiceValue));\n        }\n    }, [filterValue.length, getChoiceValue, input, selectedItems]);\n    var handleChange = useCallback(function (item, newItem) {\n        var finalItem = newItem || item;\n        var newSelectedItems = !allowDuplicates && selectedItems.includes(finalItem)\n            ? __spreadArrays(selectedItems) : __spreadArrays(selectedItems, [finalItem]);\n        setFilterValue('');\n        input.onChange(newSelectedItems.map(getChoiceValue));\n    }, [allowDuplicates, getChoiceValue, input, selectedItems, setFilterValue]);\n    var _p = useSupportCreateSuggestion({\n        create: create,\n        createLabel: createLabel,\n        createItemLabel: createItemLabel,\n        createValue: createValue,\n        handleChange: handleChange,\n        filter: filterValue,\n        onCreate: onCreate,\n    }), getCreateItem = _p.getCreateItem, handleChangeWithCreateSupport = _p.handleChange, createElement = _p.createElement;\n    var handleDelete = useCallback(function (item) { return function () {\n        var newSelectedItems = __spreadArrays(selectedItems);\n        newSelectedItems.splice(newSelectedItems.indexOf(item), 1);\n        input.onChange(newSelectedItems.map(getChoiceValue));\n    }; }, [input, selectedItems, getChoiceValue]);\n    // This function ensures that the suggestion list stay aligned to the\n    // input element even if it moves (because user scrolled for example)\n    var updateAnchorEl = function () {\n        if (!inputEl.current) {\n            return;\n        }\n        var inputPosition = inputEl.current.getBoundingClientRect();\n        // It works by implementing a mock element providing the only method used\n        // by the PopOver component, getBoundingClientRect, which will return a\n        // position based on the input position\n        if (!anchorEl.current) {\n            anchorEl.current = { getBoundingClientRect: function () { return inputPosition; } };\n        }\n        else {\n            var anchorPosition = anchorEl.current.getBoundingClientRect();\n            if (anchorPosition.x !== inputPosition.x ||\n                anchorPosition.y !== inputPosition.y) {\n                anchorEl.current = {\n                    getBoundingClientRect: function () { return inputPosition; },\n                };\n            }\n        }\n    };\n    var storeInputRef = function (input) {\n        inputEl.current = input;\n        updateAnchorEl();\n    };\n    var handleBlur = useCallback(function (event) {\n        setFilterValue('');\n        handleFilterChange('');\n        input.onBlur(event);\n    }, [handleFilterChange, input, setFilterValue]);\n    var handleFocus = useCallback(function (openMenu) { return function (event) {\n        openMenu(event);\n        input.onFocus(event);\n    }; }, [input]);\n    var handleClick = useCallback(function (openMenu) { return function (event) {\n        if (event.target === inputEl.current) {\n            openMenu(event);\n        }\n    }; }, []);\n    var shouldRenderSuggestions = function (val) {\n        if (shouldRenderSuggestionsOverride !== undefined &&\n            typeof shouldRenderSuggestionsOverride === 'function') {\n            return shouldRenderSuggestionsOverride(val);\n        }\n        return true;\n    };\n    var _q = InputProps || {}, inputRef = _q.inputRef, InputPropsWithoutInputRef = __rest(_q, [\"inputRef\"]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Downshift, __assign({ inputValue: filterValue, onChange: handleChangeWithCreateSupport, selectedItem: selectedItems, itemToString: function (item) { return getChoiceValue(item); } }, rest), function (_a) {\n            var _b, _c;\n            var getInputProps = _a.getInputProps, getItemProps = _a.getItemProps, getLabelProps = _a.getLabelProps, getMenuProps = _a.getMenuProps, isOpen = _a.isOpen, suggestionFilter = _a.inputValue, highlightedIndex = _a.highlightedIndex, openMenu = _a.openMenu;\n            var isMenuOpen = isOpen && shouldRenderSuggestions(suggestionFilter);\n            var _d = getInputProps({\n                onBlur: handleBlur,\n                onFocus: handleFocus(openMenu),\n                onClick: handleClick(openMenu),\n                onKeyDown: handleKeyDown,\n            }), idFromDownshift = _d.id, onBlur = _d.onBlur, onChange = _d.onChange, onFocus = _d.onFocus, ref = _d.ref, color = _d.color, size = _d.size, inputProps = __rest(_d, [\"id\", \"onBlur\", \"onChange\", \"onFocus\", \"ref\", \"color\", \"size\"]);\n            var suggestions = __spreadArrays(getSuggestions(suggestionFilter), (onCreate || create ? [getCreateItem()] : []));\n            return (React.createElement(\"div\", { className: classes.container },\n                React.createElement(TextField, __assign({ id: id, fullWidth: fullWidth, InputProps: __assign({ inputRef: mergeRefs([\n                            storeInputRef,\n                            inputRef,\n                        ]), classes: {\n                            root: classNames(classes.inputRoot, (_b = {},\n                                _b[classes.inputRootFilled] = variant === 'filled',\n                                _b)),\n                            input: classes.inputInput,\n                        }, startAdornment: (React.createElement(\"div\", { className: classNames((_c = {},\n                                _c[classes.chipContainerFilled] = variant === 'filled',\n                                _c[classes.chipContainerOutlined] = variant === 'outlined',\n                                _c)) }, selectedItems.map(function (item, index) { return (React.createElement(Chip, { key: index, tabIndex: -1, label: getChoiceText(item), className: classes.chip, onDelete: handleDelete(item) })); }))), endAdornment: loading && (React.createElement(AutocompleteInputLoader, null)), onBlur: onBlur, onChange: function (event) {\n                            handleFilterChange(event);\n                            onChange(event);\n                        }, onFocus: onFocus }, InputPropsWithoutInputRef), error: !!(touched && (error || submitError)), label: React.createElement(FieldTitle, __assign({ label: label }, labelProps, { source: source, resource: resource, isRequired: typeof isRequiredOverride !==\n                            'undefined'\n                            ? isRequiredOverride\n                            : isRequired })), InputLabelProps: getLabelProps({\n                        htmlFor: id,\n                    }), helperText: React.createElement(InputHelperText, { touched: touched, error: error || submitError, helperText: helperText }), variant: variant, margin: margin, color: color, size: size, disabled: disabled }, inputProps, options)),\n                React.createElement(AutocompleteSuggestionList, { isOpen: isMenuOpen, menuProps: getMenuProps({}, \n                    // https://github.com/downshift-js/downshift/issues/235\n                    { suppressRefError: true }), inputEl: inputEl.current, suggestionsContainerProps: suggestionsContainerProps, className: classes.suggestionsContainer }, suggestions.map(function (suggestion, index) { return (React.createElement(AutocompleteSuggestionItem, __assign({ key: getChoiceValue(suggestion), createValue: createValue, suggestion: suggestion, index: index, highlightedIndex: highlightedIndex, isSelected: selectedItems\n                        .map(getChoiceValue)\n                        .includes(getChoiceValue(suggestion)), filterValue: filterValue, getSuggestionText: getChoiceText }, getItemProps({\n                    item: suggestion,\n                })))); }))));\n        }),\n        createElement));\n};\nvar emptyArray = [];\nvar useStyles = makeStyles(function (theme) { return ({\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    suggestionsContainer: {\n        zIndex: theme.zIndex.modal,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.5, 0.5, 0),\n    },\n    chipContainerFilled: {\n        margin: '27px 12px 10px 0',\n    },\n    chipContainerOutlined: {\n        margin: '12px 12px 10px 0',\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputRootFilled: {\n        flexWrap: 'wrap',\n        '& $chip': {\n            backgroundColor: theme.palette.type === 'light'\n                ? 'rgba(0, 0, 0, 0.09)'\n                : 'rgba(255, 255, 255, 0.09)',\n        },\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n}); }, { name: 'RaAutocompleteArrayInput' });\nvar DefaultSetFilter = function () { };\nexport default AutocompleteArrayInput;\n"]},"metadata":{},"sourceType":"module"}