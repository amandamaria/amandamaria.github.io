{"ast":null,"code":"function e(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e.default : e;\n}\n\nvar r = require(\"lodash\"),\n    t = e(require(\"path-browserify\")),\n    n = e(require(\"firebase/app\"));\n\nfunction o() {\n  return (o = Object.assign || function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var t = arguments[r];\n\n      for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nfunction i(e, r) {\n  (null == r || r > e.length) && (r = e.length);\n\n  for (var t = 0, n = new Array(r); t < r; t++) n[t] = e[t];\n\n  return n;\n}\n\nfunction a(e) {\n  e && \"object\" == typeof e && Object.keys(e).map(function (r) {\n    e[r] = function e(r) {\n      return r ? \"object\" != typeof r ? r : r.toDate && \"function\" == typeof r.toDate ? r.toDate() : Array.isArray(r) ? r.map(function (r) {\n        return e(r);\n      }) : \"object\" == typeof r ? (Object.keys(r).map(function (t) {\n        r[t] = e(r[t]);\n      }), r) : void 0 : r;\n    }(e[r]);\n  });\n}\n\nrequire(\"firebase/firestore\"), require(\"firebase/auth\"), require(\"firebase/storage\");\n\nvar u = function (e) {\n  var r = e.data();\n  return a(r), o({\n    id: e.id\n  }, r);\n};\n\nfunction s(e, t, n) {\n  e.sort(function (e, o) {\n    var i = r.get(e, t),\n        a = r.get(o, t),\n        u = \"asc\" === n;\n    return Number.isFinite(i) && Number.isFinite(a) ? c(i, a, u) : \"string\" == typeof i && \"string\" == typeof a ? c(i.toLowerCase(), a.toLowerCase(), u) : i instanceof Date && a instanceof Date ? c(i, a, u) : c(!!i, !!a, u);\n  });\n}\n\nfunction c(e, r, t) {\n  return e > r ? t ? 1 : -1 : e < r ? t ? -1 : 1 : 0;\n}\n\nfunction l(e, t) {\n  if (!t || r.isEmpty(t)) return e;\n  var n = [];\n  return Object.keys(t).map(function (e) {\n    var r = function (e, r) {\n      if (!r || \"string\" == typeof r || \"number\" == typeof r || \"boolean\" == typeof r) return [{\n        searchField: e,\n        searchValue: r\n      }];\n      var t = {};\n      return t[e] = r, function (e) {\n        var r = [];\n        return function e(t, n) {\n          for (var o in n = n || \"\", t) if (t.hasOwnProperty(o)) {\n            var i = t && t[o],\n                a = n ? n + \".\" + o : o;\n            \"object\" == typeof i || i instanceof Array ? e(i, a) : r.push({\n              searchField: a,\n              searchValue: i\n            });\n          }\n        }(e, null), r;\n      }(t);\n    }(e, t[e]);\n\n    n.push.apply(n, r);\n  }), e.filter(function (e) {\n    return n.reduce(function (t, n) {\n      return function (e, t, n) {\n        var o = r.get(e, t);\n        return !o && !n || !!o && (\"string\" == typeof n ? o.toString().toLowerCase().includes(n.toLowerCase()) : (\"boolean\" == typeof n || \"number\" == typeof n) && o === n);\n      }(e, n.searchField, n.searchValue) && t;\n    }, !0);\n  });\n}\n\nvar f = function () {\n  return null;\n},\n    h = function () {\n  function e(e, r) {\n    this.title = e, this.cacheEnabledKey = r;\n  }\n\n  var r,\n      t = e.prototype;\n  return t.isEnabled = function () {\n    return !!localStorage.getItem(this.cacheEnabledKey);\n  }, t.SetEnabled = function (e) {\n    e ? localStorage.setItem(this.cacheEnabledKey, \"true\") : localStorage.removeItem(this.cacheEnabledKey);\n  }, (r = [{\n    key: \"log\",\n    get: function () {\n      return this.isEnabled() ? console.log.bind(console, this.title) : f;\n    }\n  }, {\n    key: \"warn\",\n    get: function () {\n      return this.isEnabled() ? console.warn.bind(console, this.title) : f;\n    }\n  }, {\n    key: \"error\",\n    get: function () {\n      return this.isEnabled() ? console.error.bind(console, this.title) : f;\n    }\n  }]) && function (e, r) {\n    for (var t = 0; t < r.length; t++) {\n      var n = r[t];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n    }\n  }(e.prototype, r), e;\n}(),\n    d = new h(\"ðŸ”¥raf:\", \"LOGGING_ENABLED\"),\n    v = d.log,\n    m = d.error,\n    p = d.warn,\n    g = new h(\"ðŸ’¸firestore-costs:\", \"LOGGING_FIRESTORE_COSTS_ENABLED\"),\n    P = \"firecosts-single-reads\";\n\nfunction y(e, r, t) {\n  if (!e.s) {\n    if (t instanceof b) {\n      if (!t.s) return void (t.o = y.bind(null, e, r));\n      1 & r && (r = t.s), t = t.v;\n    }\n\n    if (t && t.then) return void t.then(y.bind(null, e, r), y.bind(null, e, 2));\n    e.s = r, e.v = t;\n    var n = e.o;\n    n && n(e);\n  }\n}\n\nvar b = function () {\n  function e() {}\n\n  return e.prototype.then = function (r, t) {\n    var n = new e(),\n        o = this.s;\n\n    if (o) {\n      var i = 1 & o ? r : t;\n\n      if (i) {\n        try {\n          y(n, 1, i(this.v));\n        } catch (e) {\n          y(n, 2, e);\n        }\n\n        return n;\n      }\n\n      return this;\n    }\n\n    return this.o = function (e) {\n      try {\n        var o = e.v;\n        1 & e.s ? y(n, 1, r ? r(o) : o) : t ? y(n, 1, t(o)) : y(n, 2, o);\n      } catch (e) {\n        y(n, 2, e);\n      }\n    }, n;\n  }, e;\n}();\n\nfunction w(e, r, t) {\n  var n,\n      o,\n      i = -1;\n  return function a(u) {\n    try {\n      for (; ++i < e.length && (!t || !t());) if ((u = r(i)) && u.then) {\n        if (!((s = u) instanceof b && 1 & s.s)) return void u.then(a, o || (o = y.bind(null, n = new b(), 2)));\n        u = u.v;\n      }\n\n      n ? y(n, 1, u) : n = u;\n    } catch (e) {\n      y(n || (n = new b()), 2, e);\n    }\n\n    var s;\n  }(), n;\n}\n\nvar j = function e(r, t) {\n  try {\n    var n,\n        i = Array.isArray(t),\n        a = !i && \"object\" == typeof t,\n        u = a && !!t && t.hasOwnProperty(\"src\"),\n        s = function () {\n      if (u) {\n        if (t.src.startsWith(\"https://\")) return n = 1, t;\n        var s = null;\n        return function (e, i) {\n          try {\n            var a = (s = r.storage().ref(t.src), Promise.resolve(s.getDownloadURL()).then(function (e) {\n              return n = 1, o({}, t, {\n                src: e\n              });\n            }));\n          } catch (e) {\n            return i(e);\n          }\n\n          return a && a.then ? a.then(void 0, i) : a;\n        }(0, function (e) {\n          return m(\"Error when getting download URL\", {\n            error: e,\n            fieldValue: t,\n            ref: s\n          }), n = 1, t;\n        });\n      }\n\n      return function () {\n        if (a) {\n          var o = function () {\n            return n = 1, t;\n          },\n              u = function (n, o, i) {\n            var a = [];\n\n            for (var u in n) a.push(u);\n\n            return w(a, function (n) {\n              return function (n) {\n                var o = function () {\n                  if (t.hasOwnProperty(n)) return Promise.resolve(e(r, t[n])).then(function (e) {\n                    t[n] = e;\n                  });\n                }();\n\n                if (o && o.then) return o.then(function () {});\n              }(a[n]);\n            }, void 0);\n          }(t);\n\n          return u && u.then ? u.then(o) : o();\n        }\n\n        return function () {\n          if (i) {\n            var o = function () {\n              return n = 1, t;\n            },\n                a = w(t, function (n) {\n              return Promise.resolve(e(r, t[n])).then(function (e) {\n                t[n] = e;\n              });\n            });\n\n            return a && a.then ? a.then(o) : o();\n          }\n        }();\n      }();\n    }();\n\n    return Promise.resolve(s && s.then ? s.then(function (e) {\n      return n ? e : t;\n    }) : n ? s : t);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction R(e, r) {\n  if (!e) return r + \"\";\n  if (!r) throw new Error(\"Resource name must be a string of length greater than 0 characters\");\n  var n = \"string\" == typeof e ? e : e(),\n      o = t.join(\"/\", n, \"/\", r, \"/\");\n  if ((o.split(\"/\").length - 1) % 2) throw new Error('The rootRef path must point to a \"document\"\\n    not a \"collection\"e.g. /collection/document/ or\\n    /collection/document/collection/document/');\n  return o.slice(1, -1);\n}\n\nfunction G() {\n  return t.join.apply(t, [].slice.call(arguments));\n}\n\nvar F = function () {\n  function e() {\n    this.firestore = null, this.app = null, this.options = {};\n  }\n\n  var r = e.prototype;\n  return r.GetApp = function () {\n    return this.app;\n  }, r.init = function (e, r) {\n    var t = r || {};\n    this.options = t, this.app = function (e, r) {\n      return r.app ? r.app : n.apps.length ? n.app() : n.initializeApp(e);\n    }(e, t), this.firestore = this.app.firestore();\n  }, r.db = function () {\n    return this.firestore;\n  }, r.serverTimestamp = function () {\n    return new Date();\n  }, r.auth = function () {\n    return this.app.auth();\n  }, r.storage = function () {\n    return this.app.storage();\n  }, r.GetUserLogin = function () {\n    try {\n      var e = this;\n      return Promise.resolve(new Promise(function (r, t) {\n        e.app.auth().onAuthStateChanged(function (e) {\n          e ? r(e) : t(\"getUserLogin() no user logged in\");\n        });\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.OnUserLogout = function (e) {\n    this.app.auth().onAuthStateChanged(function (r) {\n      var t = !r;\n      v(\"FirebaseWrapper.OnUserLogout\", {\n        user: r,\n        isLoggedOut: t\n      }), t && e(r);\n    });\n  }, e;\n}(),\n    L = function () {\n  function e(e, r, t) {\n    var n = this;\n    this.fireWrapper = e, this.options = r, this.flogger = t, this.resources = {}, this.db = e.db(), this.fireWrapper.OnUserLogout(function () {\n      n.resources = {};\n    });\n  }\n\n  var r = e.prototype;\n  return r.TryGetResource = function (e, r, t) {\n    try {\n      var n = this,\n          o = function () {\n        return n.TryGetResourcePromise(e, t);\n      },\n          i = function () {\n        if (r) return Promise.resolve(n.RefreshResource(e, t)).then(function () {});\n      }();\n\n      return Promise.resolve(i && i.then ? i.then(o) : o());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.GetResource = function (e) {\n    var r = this.resources[e];\n    if (!r) throw new Error(\"react-admin-firebase: Can't find resource: \\\"\" + e + '\"');\n    return r;\n  }, r.TryGetResourcePromise = function (e, r) {\n    try {\n      var t = this;\n      return v(\"resourceManager.TryGetResourcePromise\", {\n        relativePath: e,\n        collectionQuery: r\n      }), Promise.resolve(t.initPath(e)).then(function () {\n        var r = t.resources[e];\n        if (!r) throw new Error('react-admin-firebase: Cant find resource: \"' + e + '\"');\n        return r;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.RefreshResource = function (e, r) {\n    try {\n      var t,\n          n,\n          o = this;\n      if (null != (t = o.options) && null != (n = t.lazyLoading) && n.enabled) throw p(\"resourceManager.RefreshResource\", {\n        warn: \"RefreshResource is not available in lazy loading mode\"\n      }), new Error(\"react-admin-firebase: RefreshResource is not available in lazy loading mode\");\n      return v(\"resourceManager.RefreshResource\", {\n        relativePath: e,\n        collectionQuery: r\n      }), Promise.resolve(o.initPath(e)).then(function () {\n        var t = o.resources[e],\n            n = t.collection,\n            i = o.applyQuery(n, r);\n        return Promise.resolve(i.get()).then(function (e) {\n          t.list = e.docs.map(function (e) {\n            return o.parseFireStoreDocument(e);\n          }), o.flogger.logDocument(e.docs.length)(), v(\"resourceManager.RefreshResource\", {\n            newDocs: e,\n            resource: t,\n            collectionPath: n.path\n          });\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.GetSingleDoc = function (e, r) {\n    try {\n      var t = this;\n      return Promise.resolve(t.initPath(e)).then(function () {\n        var n = t.GetResource(e);\n        return t.flogger.logDocument(1)(), Promise.resolve(n.collection.doc(r).get()).then(function (o) {\n          if (!o.exists) throw new Error(\"react-admin-firebase: No id found matching: \" + r);\n          var i = t.parseFireStoreDocument(o);\n          return v(\"resourceManager.GetSingleDoc\", {\n            relativePath: e,\n            resource: n,\n            docId: r,\n            docSnap: o,\n            result: i\n          }), i;\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.initPath = function (e) {\n    try {\n      var r = R(this.options && this.options.rootRef, e),\n          t = !!this.resources[e];\n      if (v(\"resourceManager.initPath()\", {\n        absolutePath: r,\n        hasBeenInited: t\n      }), t) return v(\"resourceManager.initPath() has been initialized already...\"), Promise.resolve();\n      var n = this.db.collection(r),\n          o = {\n        collection: n,\n        list: [],\n        path: e,\n        pathAbsolute: r\n      };\n      return this.resources[e] = o, v(\"resourceManager.initPath() setting resource...\", {\n        resource: o,\n        allResources: this.resources,\n        collection: n,\n        collectionPath: n.path\n      }), Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.parseFireStoreDocument = function (e) {\n    if (!e) return p(\"parseFireStoreDocument: no doc\", {\n      doc: e\n    }), {};\n    var r = e.data();\n    return a(r), o({\n      id: e.id\n    }, r);\n  }, r.getUserIdentifier = function () {\n    try {\n      return Promise.resolve(this.options.associateUsersById ? this.getCurrentUserId() : this.getCurrentUserEmail());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.getCurrentUserEmail = function () {\n    try {\n      return Promise.resolve(this.fireWrapper.GetUserLogin()).then(function (e) {\n        return e ? e.email : \"annonymous user\";\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.getCurrentUserId = function () {\n    try {\n      return Promise.resolve(this.fireWrapper.GetUserLogin()).then(function (e) {\n        return e ? e.uid : \"annonymous user\";\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.applyQuery = function (e, r) {\n    var t = r ? r(e) : e;\n    return v(\"resourceManager.applyQuery() ...\", {\n      collection: e,\n      collectionQuery: (r || \"-\").toString(),\n      collRef: t\n    }), t;\n  }, e;\n}(),\n    A = function () {\n  function e(e, r, t) {\n    this.fireWrapper = e, this.options = r, this.flogger = t, this.rm = new L(this.fireWrapper, this.options, this.flogger);\n  }\n\n  var t = e.prototype;\n  return t.db = function () {\n    return this.fireWrapper.db();\n  }, t.checkRemoveIdField = function (e, r) {\n    this.options.dontAddIdFieldToDoc || (e.id = r);\n  }, t.parseDataAndUpload = function (e, t, n) {\n    try {\n      var o = this;\n      if (!n) return Promise.resolve(n);\n\n      var i = e.collection.doc(t).path,\n          a = function (e) {\n        if (!e || \"object\" != typeof e) return [];\n        var r = [];\n        return Object.keys(e).map(function (t) {\n          !function e(r, t, n) {\n            return r ? \"object\" != typeof r ? r : r.toDate && \"function\" == typeof r.toDate ? r.toDate() : Array.isArray(r) ? r.map(function (r, o) {\n              return e(r, t + \".\" + o, n);\n            }) : \"object\" == typeof r ? r && r.hasOwnProperty(\"rawFile\") ? (n.push({\n              fieldDotsPath: t,\n              fieldSlashesPath: t.split(\".\").join(\"/\"),\n              rawFile: r.rawFile\n            }), void delete r.rawFile) : (Object.keys(r).map(function (o) {\n              e(r[o], t + \".\" + o, n);\n            }), r) : void 0 : r;\n          }(e[t], t, r);\n        }), r;\n      }(n);\n\n      return Promise.resolve(Promise.all(a.map(function (e) {\n        try {\n          return Promise.resolve(o.uploadAndGetLink(e.rawFile, i, e.fieldSlashesPath, !!o.options.useFileNamesInStorage)).then(function (t) {\n            r.set(n, e.fieldDotsPath + \".src\", t);\n          });\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }))).then(function () {\n        return n;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, t.addCreatedByFields = function (e) {\n    try {\n      return Promise.resolve(function (e, r, t, n) {\n        try {\n          return n.disableMeta ? Promise.resolve() : Promise.resolve(t.getUserIdentifier()).then(function (t) {\n            var o = function (e) {\n              if (e.renameMetaFields && e.renameMetaFields.created_at) return e.renameMetaFields.created_at;\n              var r = e.metaFieldCasing;\n              return r ? \"camel\" === r ? \"createDate\" : \"snake\" === r ? \"create_date\" : \"pascal\" === r ? \"CreateDate\" : \"kebab\" === r ? \"create-date\" : \"createdate\" : \"createdate\";\n            }(n),\n                i = function (e) {\n              if (e.renameMetaFields && e.renameMetaFields.created_by) return e.renameMetaFields.created_by;\n              var r = e.metaFieldCasing;\n              return r ? \"camel\" === r ? \"createdBy\" : \"snake\" === r ? \"created_by\" : \"pascal\" === r ? \"CreatedBy\" : \"kebab\" === r ? \"created-by\" : \"createdby\" : \"createdby\";\n            }(n);\n\n            e[o] = r.serverTimestamp(), e[i] = t;\n          });\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }(e, this.fireWrapper, this.rm, this.options));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, t.addUpdatedByFields = function (e) {\n    try {\n      return Promise.resolve(function (e, r, t, n) {\n        try {\n          return n.disableMeta ? Promise.resolve() : Promise.resolve(t.getUserIdentifier()).then(function (t) {\n            var o = function (e) {\n              if (e.renameMetaFields && e.renameMetaFields.updated_at) return e.renameMetaFields.updated_at;\n              var r = e.metaFieldCasing;\n              return r ? \"camel\" === r ? \"lastUpdate\" : \"snake\" === r ? \"last_update\" : \"pascal\" === r ? \"LastUpdate\" : \"kebab\" === r ? \"last-update\" : \"lastupdate\" : \"lastupdate\";\n            }(n),\n                i = function (e) {\n              if (e.renameMetaFields && e.renameMetaFields.updated_by) return e.renameMetaFields.updated_by;\n              var r = e.metaFieldCasing;\n              return r ? \"camel\" === r ? \"updatedBy\" : \"snake\" === r ? \"updated_by\" : \"pascal\" === r ? \"UpdatedBy\" : \"kebab\" === r ? \"updated-by\" : \"updatedby\" : \"updatedby\";\n            }(n);\n\n            e[o] = r.serverTimestamp(), e[i] = t;\n          });\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }(e, this.fireWrapper, this.rm, this.options));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, t.uploadAndGetLink = function (e, r, t, n) {\n    try {\n      var o = n ? G(r, t, e.name) : G(r, t);\n      return Promise.resolve(this.saveFile(o, e));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, t.saveFile = function (e, r) {\n    try {\n      var t = this;\n      v(\"saveFile() saving file...\", {\n        storagePath: e,\n        rawFile: r\n      });\n      var n = t.fireWrapper.storage().ref(e).put(r);\n      return Promise.resolve(function (r, o) {\n        try {\n          var i = Promise.resolve(new Promise(function (e, r) {\n            return n.then(e).catch(r);\n          })).then(function (r) {\n            return Promise.resolve(r.ref.getDownloadURL()).then(function (n) {\n              return v(\"saveFile() saved file\", {\n                storagePath: e,\n                taskResult: r,\n                getDownloadURL: n\n              }), t.options.relativeFilePaths ? e : n;\n            });\n          });\n        } catch (e) {\n          return o(e);\n        }\n\n        return i && i.then ? i.then(void 0, o) : i;\n      }(0, function (e) {\n        m(\"storage/unknown\" === e.code ? 'saveFile() error saving file, No bucket found! Try clicking \"Get Started\" in firebase -> storage' : \"saveFile() error saving file\", {\n          storageError: e\n        });\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, e;\n}();\n\nfunction S(e, r, t) {\n  if (!e.s) {\n    if (t instanceof T) {\n      if (!t.s) return void (t.o = S.bind(null, e, r));\n      1 & r && (r = t.s), t = t.v;\n    }\n\n    if (t && t.then) return void t.then(S.bind(null, e, r), S.bind(null, e, 2));\n    e.s = r, e.v = t;\n    var n = e.o;\n    n && n(e);\n  }\n}\n\nvar T = function () {\n  function e() {}\n\n  return e.prototype.then = function (r, t) {\n    var n = new e(),\n        o = this.s;\n\n    if (o) {\n      var i = 1 & o ? r : t;\n\n      if (i) {\n        try {\n          S(n, 1, i(this.v));\n        } catch (e) {\n          S(n, 2, e);\n        }\n\n        return n;\n      }\n\n      return this;\n    }\n\n    return this.o = function (e) {\n      try {\n        var o = e.v;\n        1 & e.s ? S(n, 1, r ? r(o) : o) : t ? S(n, 1, t(o)) : S(n, 2, o);\n      } catch (e) {\n        S(n, 2, e);\n      }\n    }, n;\n  }, e;\n}();\n\nfunction I(e) {\n  return e instanceof T && 1 & e.s;\n}\n\nvar k = function (e, r, t, n) {\n  try {\n    var i = btoa(JSON.stringify(o({}, r, {\n      resourceName: t\n    }))),\n        a = localStorage.getItem(i);\n    return a ? Promise.resolve(e.doc(a).get()).then(function (e) {\n      return n.logDocument(1)(), !!e.exists && e;\n    }) : Promise.resolve(!1);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    D = function (e, r, t, n, i) {\n  void 0 === i && (i = E);\n\n  try {\n    var a = i.filters ? (s = e, c = r.filter, Object.keys(c).forEach(function (e) {\n      s = s.where(e, \"==\", c[e]);\n    }), s) : e,\n        u = i.sort ? function (e, r) {\n      if (null != r && \"id\" !== r.field) {\n        var t = r.field,\n            n = r.order.toLocaleLowerCase();\n        e = e.orderBy(t, n);\n      }\n\n      return e;\n    }(a, r.sort) : a;\n    return Promise.resolve(i.pagination ? function (e, r, t, n, i) {\n      try {\n        var a = r.pagination,\n            u = a.page,\n            s = a.perPage,\n            c = function () {\n          if (1 !== u) return Promise.resolve(k(t, r, n, i)).then(function (a) {\n            function u() {\n              e = e.startAfter(a).limit(s);\n            }\n\n            var c = function () {\n              if (!a) return Promise.resolve(function (e, r, t, n, i) {\n                try {\n                  var a = function () {\n                    var e = (s - f) * c,\n                        t = 1 === f ? r.limit(e) : r.startAt(l).limit(e);\n                    return Promise.resolve(t.get()).then(function (e) {\n                      var r = e.docs.length;\n                      return i.logDocument(r)(), e.docs[r - 1];\n                    });\n                  },\n                      u = t.pagination,\n                      s = u.page,\n                      c = u.perPage,\n                      l = !1,\n                      f = s - 1,\n                      h = o({}, t, {\n                    pagination: o({}, t.pagination)\n                  }),\n                      d = function (e, r, t) {\n                    for (var n;;) {\n                      var o = e();\n                      if (I(o) && (o = o.v), !o) return i;\n\n                      if (o.then) {\n                        n = 0;\n                        break;\n                      }\n\n                      var i = t();\n\n                      if (i && i.then) {\n                        if (!I(i)) {\n                          n = 1;\n                          break;\n                        }\n\n                        i = i.s;\n                      }\n                    }\n\n                    var a = new T(),\n                        u = S.bind(null, a, 2);\n                    return (0 === n ? o.then(c) : 1 === n ? i.then(s) : (void 0).then(function () {\n                      (o = e()) ? o.then ? o.then(c).then(void 0, u) : c(o) : S(a, 1, i);\n                    })).then(void 0, u), a;\n\n                    function s(r) {\n                      i = r;\n\n                      do {\n                        if (!(o = e()) || I(o) && !o.v) return void S(a, 1, i);\n                        if (o.then) return void o.then(c).then(void 0, u);\n                        I(i = t()) && (i = i.v);\n                      } while (!i || !i.then);\n\n                      i.then(s).then(void 0, u);\n                    }\n\n                    function c(e) {\n                      e ? (i = t()) && i.then ? i.then(s).then(void 0, u) : s(i) : S(a, 1, i);\n                    }\n                  }(function () {\n                    return !l && f > 1;\n                  }, 0, function () {\n                    return f--, h.pagination.page = f, console.log(\"getting query cursor currentPage=\", f), Promise.resolve(k(e, h, n, i)).then(function (e) {\n                      l = e;\n                    });\n                  });\n\n                  return Promise.resolve(d && d.then ? d.then(a) : a());\n                } catch (e) {\n                  return Promise.reject(e);\n                }\n              }(t, e, r, n, i)).then(function (e) {\n                a = e;\n              });\n            }();\n\n            return c && c.then ? c.then(u) : u();\n          });\n          e = e.limit(s);\n        }();\n\n        return Promise.resolve(c && c.then ? c.then(function () {\n          return e;\n        }) : e);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }(u, r, e, t, n) : u);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n\n  var s, c;\n},\n    E = {\n  filters: !0,\n  sort: !0,\n  pagination: !0\n};\n\nfunction U(e, r) {\n  return o({}, e, {\n    filter: r ? o({\n      deleted: !1\n    }, e.filter) : e.filter\n  });\n}\n\nfunction C(e, r, t) {\n  if (!e.s) {\n    if (t instanceof O) {\n      if (!t.s) return void (t.o = C.bind(null, e, r));\n      1 & r && (r = t.s), t = t.v;\n    }\n\n    if (t && t.then) return void t.then(C.bind(null, e, r), C.bind(null, e, 2));\n    e.s = r, e.v = t;\n    var n = e.o;\n    n && n(e);\n  }\n}\n\nvar O = function () {\n  function e() {}\n\n  return e.prototype.then = function (r, t) {\n    var n = new e(),\n        o = this.s;\n\n    if (o) {\n      var i = 1 & o ? r : t;\n\n      if (i) {\n        try {\n          C(n, 1, i(this.v));\n        } catch (e) {\n          C(n, 2, e);\n        }\n\n        return n;\n      }\n\n      return this;\n    }\n\n    return this.o = function (e) {\n      try {\n        var o = e.v;\n        1 & e.s ? C(n, 1, r ? r(o) : o) : t ? C(n, 1, t(o)) : C(n, 2, o);\n      } catch (e) {\n        C(n, 2, e);\n      }\n    }, n;\n  }, e;\n}();\n\nfunction M(e, r, t) {\n  var n = [];\n\n  for (var o in e) n.push(o);\n\n  return function (e, r, t) {\n    var n,\n        o,\n        i = -1;\n    return function a(u) {\n      try {\n        for (; ++i < e.length && (!t || !t());) if ((u = r(i)) && u.then) {\n          if (!((s = u) instanceof O && 1 & s.s)) return void u.then(a, o || (o = C.bind(null, n = new O(), 2)));\n          u = u.v;\n        }\n\n        n ? C(n, 1, u) : n = u;\n      } catch (e) {\n        C(n || (n = new O()), 2, e);\n      }\n\n      var s;\n    }(), n;\n  }(n, function (e) {\n    return r(n[e]);\n  }, t);\n}\n\nvar W = function () {\n  function e(e, r, t) {\n    this.options = e, this.rm = r, this.client = t;\n  }\n\n  var r = e.prototype;\n  return r.apiGetList = function (e, r) {\n    try {\n      var t = this;\n      return Promise.resolve(t.tryGetResource(e)).then(function (n) {\n        var i = U(r, !!t.options.softDelete);\n        return v(\"apiGetListLazy\", {\n          resourceName: e,\n          params: i\n        }), Promise.resolve(D(n.collection, i, e, t.client.flogger)).then(function (r) {\n          return Promise.resolve(r.get()).then(function (r) {\n            var a = r.docs.length;\n            if (!a) return v(\"apiGetListLazy\", {\n              message: \"There are not records for given query\"\n            }), {\n              data: [],\n              total: 0\n            };\n            t.client.flogger.logDocument(a)();\n            var s = r.docs.map(u),\n                c = r.docs[r.docs.length - 1];\n            !function (e, r, t) {\n              var n = btoa(JSON.stringify(o({}, r, {\n                resourceName: t\n              })));\n              localStorage.setItem(n, e.id);\n              var i = \"ra-firebase-cursor-keys_\" + t,\n                  a = localStorage.getItem(i);\n\n              if (a) {\n                var u = JSON.parse(a).concat(n);\n                localStorage.setItem(i, JSON.stringify(u));\n              } else localStorage.setItem(i, JSON.stringify([n]));\n            }(c, function (e) {\n              return o({}, e, {\n                pagination: o({}, e.pagination, {\n                  page: e.pagination.page + 1\n                })\n              });\n            }(i), e);\n            var l = 9e3;\n            return Promise.resolve(t.checkIfOnLastPage(n.collection, i, e, c)).then(function (e) {\n              var r;\n\n              function o(e) {\n                return r ? e : (v(\"apiGetListLazy result\", {\n                  docs: s,\n                  resource: n,\n                  collectionPath: n.collection.path\n                }), {\n                  data: s,\n                  total: l\n                });\n              }\n\n              if (e) {\n                var a = i.pagination;\n                l = (a.page - 1) * a.perPage + s.length, v(\"apiGetListLazy\", {\n                  message: \"It's last page of collection.\"\n                });\n              }\n\n              var u = function () {\n                if (t.options.relativeFilePaths) return Promise.resolve(Promise.all(s.map(function (e) {\n                  try {\n                    var r = M(e, function (r) {\n                      return Promise.resolve(j(t.client.fireWrapper, e[r])).then(function (t) {\n                        e[r] = t;\n                      });\n                    });\n                    return Promise.resolve(r && r.then ? r.then(function () {\n                      return e;\n                    }) : e);\n                  } catch (e) {\n                    return Promise.reject(e);\n                  }\n                }))).then(function (e) {\n                  return v(\"apiGetListLazy result\", {\n                    docs: e,\n                    resource: n,\n                    collectionPath: n.collection.path\n                  }), r = 1, {\n                    data: e,\n                    total: l\n                  };\n                });\n              }();\n\n              return u && u.then ? u.then(o) : o(u);\n            });\n          });\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.apiGetManyReference = function (e, r) {\n    try {\n      var t = this;\n      return Promise.resolve(t.tryGetResource(e)).then(function (n) {\n        var i;\n        v(\"apiGetManyReferenceLazy\", {\n          resourceName: e,\n          resource: n,\n          reactAdminParams: r\n        });\n        var a = o({}, r.filter, ((i = {})[r.target] = r.id, i)),\n            s = U(o({}, r, {\n          filter: a\n        }), !!t.options.softDelete);\n        return Promise.resolve(D(n.collection, s, e, t.client.flogger)).then(function (e) {\n          return Promise.resolve(e.get()).then(function (e) {\n            var r;\n\n            function o(e) {\n              return r ? e : (v(\"apiGetManyReferenceLazy result\", {\n                docs: i,\n                resource: n,\n                collectionPath: n.collection.path\n              }), {\n                data: i,\n                total: i.length\n              });\n            }\n\n            t.client.flogger.logDocument(e.docs.length)();\n\n            var i = e.docs.map(u),\n                a = function () {\n              if (t.options.relativeFilePaths) return Promise.resolve(Promise.all(i.map(function (e) {\n                try {\n                  var r = M(e, function (r) {\n                    return Promise.resolve(j(t.client.fireWrapper, e[r])).then(function (t) {\n                      e[r] = t;\n                    });\n                  });\n                  return Promise.resolve(r && r.then ? r.then(function () {\n                    return e;\n                  }) : e);\n                } catch (e) {\n                  return Promise.reject(e);\n                }\n              }))).then(function (e) {\n                return v(\"apiGetManyReferenceLazy result\", {\n                  docs: e,\n                  resource: n,\n                  collectionPath: n.collection.path\n                }), r = 1, {\n                  data: e,\n                  total: i.length\n                };\n              });\n            }();\n\n            return a && a.then ? a.then(o) : o(a);\n          });\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.checkIfOnLastPage = function (e, r, t, n) {\n    try {\n      return Promise.resolve(D(e, r, t, this.client.flogger, {\n        filters: !0,\n        sort: !0\n      })).then(function (e) {\n        if (!n) throw new Error(\"Page cursor was empty...\");\n        return Promise.resolve(e.startAfter(n).limit(1).get()).then(function (e) {\n          return e.empty;\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.clearQueryCursors = function (e) {\n    !function (e) {\n      var r = \"ra-firebase-cursor-keys_\" + e,\n          t = localStorage.getItem(r);\n      t && (JSON.parse(t).forEach(function (e) {\n        return localStorage.removeItem(e);\n      }), localStorage.removeItem(r));\n    }(e);\n  }, r.tryGetResource = function (e, r) {\n    try {\n      return Promise.resolve(this.rm.TryGetResourcePromise(e, r));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, e;\n}();\n\nfunction N(e, r) {\n  try {\n    var t = e();\n  } catch (e) {\n    return r(e);\n  }\n\n  return t && t.then ? t.then(void 0, r) : t;\n}\n\nvar H = function () {\n  function e(e, r) {\n    var t = r || {};\n    v(\"Auth Client: initializing...\", {\n      firebaseConfig: e,\n      options: t\n    });\n    var n = new F();\n    n.init(e, t), this.auth = n.auth(), t.persistence && this.setPersistence(t.persistence);\n  }\n\n  var r = e.prototype;\n  return r.setPersistence = function (e) {\n    var r;\n\n    switch (e) {\n      case \"local\":\n        r = n.auth.Auth.Persistence.LOCAL;\n        break;\n\n      case \"none\":\n        r = n.auth.Auth.Persistence.NONE;\n        break;\n\n      case \"session\":\n      default:\n        r = n.auth.Auth.Persistence.SESSION;\n    }\n\n    v(\"setPersistence\", {\n      persistenceInput: e,\n      persistenceResolved: r\n    }), this.auth.setPersistence(r).catch(function (e) {\n      return console.error(e);\n    });\n  }, r.HandleAuthLogin = function (e) {\n    try {\n      var r = this,\n          t = e.username,\n          n = e.password;\n      return Promise.resolve(t && n ? N(function () {\n        return Promise.resolve(r.auth.signInWithEmailAndPassword(t, n)).then(function (e) {\n          return v(\"HandleAuthLogin: user sucessfully logged in\", {\n            user: e\n          }), e;\n        });\n      }, function () {\n        throw v(\"HandleAuthLogin: invalid credentials\", {\n          params: e\n        }), new Error(\"Login error: invalid credentials\");\n      }) : r.getUserLogin());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.HandleAuthLogout = function () {\n    return this.auth.signOut();\n  }, r.HandleAuthError = function (e) {\n    return v(\"HandleAuthLogin: invalid credentials\", {\n      errorHttp: e\n    }), \"ok\" === function (e) {\n      if (e >= 200 && e < 300) return \"ok\";\n\n      switch (e) {\n        case 401:\n        case 403:\n          return \"unauthenticated\";\n\n        case 0:\n        case 400:\n        case 404:\n        case 409:\n        case 429:\n        case 499:\n        case 500:\n        case 501:\n        case 503:\n        case 504:\n        default:\n          return \"ok\";\n      }\n    }(!!e && e.status) ? (v(\"API is actually authenticated\"), Promise.resolve()) : (p(\"Recieved authentication error from API\"), Promise.reject());\n  }, r.HandleAuthCheck = function () {\n    try {\n      return Promise.resolve(this.getUserLogin());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.getUserLogin = function () {\n    var e = this;\n    return new Promise(function (r, t) {\n      if (e.auth.currentUser) return r(e.auth.currentUser);\n      var n = e.auth.onAuthStateChanged(function (e) {\n        n(), e ? r(e) : t();\n      });\n    });\n  }, r.HandleGetPermissions = function () {\n    try {\n      var e = this;\n      return Promise.resolve(N(function () {\n        return Promise.resolve(e.getUserLogin()).then(function (e) {\n          return Promise.resolve(e.getIdTokenResult()).then(function (e) {\n            return e.claims;\n          });\n        });\n      }, function (e) {\n        return v(\"HandleGetPermission: no user is logged in or tokenResult error\", {\n          e: e\n        }), null;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.HandleGetIdentity = function () {\n    try {\n      var e = this;\n      return Promise.resolve(N(function () {\n        return Promise.resolve(e.getUserLogin()).then(function (e) {\n          var r = e.displayName,\n              t = e.photoURL;\n          return {\n            id: e.uid,\n            fullName: \"\" + (null != r ? r : \"\"),\n            avatar: \"\" + (null != t ? t : \"\")\n          };\n        });\n      }, function (e) {\n        return v(\"HandleGetIdentity: no user is logged in\", {\n          e: e\n        }), null;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.HandleGetJWTAuthTime = function () {\n    try {\n      var e = this;\n      return Promise.resolve(N(function () {\n        return Promise.resolve(e.getUserLogin()).then(function (e) {\n          return Promise.resolve(e.getIdTokenResult()).then(function (e) {\n            return e.authTime;\n          });\n        });\n      }, function (e) {\n        return v(\"HandleGetJWTAuthTime: no user is logged in or tokenResult error\", {\n          e: e\n        }), null;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.HandleGetJWTExpirationTime = function () {\n    try {\n      var e = this;\n      return Promise.resolve(N(function () {\n        return Promise.resolve(e.getUserLogin()).then(function (e) {\n          return Promise.resolve(e.getIdTokenResult()).then(function (e) {\n            return e.expirationTime;\n          });\n        });\n      }, function (e) {\n        return v(\"HandleGetJWTExpirationTime: no user is logged in or tokenResult error\", {\n          e: e\n        }), null;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.HandleGetJWTSignInProvider = function () {\n    try {\n      var e = this;\n      return Promise.resolve(N(function () {\n        return Promise.resolve(e.getUserLogin()).then(function (e) {\n          return Promise.resolve(e.getIdTokenResult()).then(function (e) {\n            return e.signInProvider;\n          });\n        });\n      }, function (e) {\n        return v(\"HandleGetJWTSignInProvider: no user is logged in or tokenResult error\", {\n          e: e\n        }), null;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.HandleGetJWTIssuedAtTime = function () {\n    try {\n      var e = this;\n      return Promise.resolve(N(function () {\n        return Promise.resolve(e.getUserLogin()).then(function (e) {\n          return Promise.resolve(e.getIdTokenResult()).then(function (e) {\n            return e.issuedAtTime;\n          });\n        });\n      }, function (e) {\n        return v(\"HandleGetJWTIssuedAtTime: no user is logged in or tokenResult error\", {\n          e: e\n        }), null;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, r.HandleGetJWTToken = function () {\n    try {\n      var e = this;\n      return Promise.resolve(N(function () {\n        return Promise.resolve(e.getUserLogin()).then(function (e) {\n          return Promise.resolve(e.getIdTokenResult()).then(function (e) {\n            return e.token;\n          });\n        });\n      }, function (e) {\n        return v(\"HandleGetJWTIssuedAtTime: no user is logged in or tokenResult error\", {\n          e: e\n        }), null;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, e;\n}();\n\nexports.FirebaseAuthProvider = function (e, r) {\n  !function (e, r) {\n    if (!(e || r && r.app)) throw new Error(\"Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider\");\n  }(e, r), d.SetEnabled(!(null == r || !r.logging));\n  var t = new H(e, r);\n  return {\n    login: function (e) {\n      return t.HandleAuthLogin(e);\n    },\n    logout: function () {\n      return t.HandleAuthLogout();\n    },\n    checkAuth: function () {\n      return t.HandleAuthCheck();\n    },\n    checkError: function (e) {\n      return t.HandleAuthError(e);\n    },\n    getPermissions: function () {\n      return t.HandleGetPermissions();\n    },\n    getIdentity: function () {\n      return t.HandleGetIdentity();\n    },\n    getAuthUser: function () {\n      return t.getUserLogin();\n    },\n    getJWTAuthTime: function () {\n      return t.HandleGetJWTAuthTime();\n    },\n    getJWTExpirationTime: function () {\n      return t.HandleGetJWTExpirationTime();\n    },\n    getJWTSignInProvider: function () {\n      return t.HandleGetJWTSignInProvider();\n    },\n    getJWTClaims: function () {\n      return t.HandleGetPermissions();\n    },\n    getJWTToken: function () {\n      return t.HandleGetJWTToken();\n    }\n  };\n}, exports.FirebaseDataProvider = function (e, r) {\n  var t,\n      n,\n      a = function (e) {\n    try {\n      var r;\n      return Promise.resolve(function (t, n) {\n        try {\n          var o = Promise.resolve(e()).then(function (e) {\n            return r = e;\n          });\n        } catch (e) {\n          return n(e);\n        }\n\n        return o && o.then ? o.then(void 0, n) : o;\n      }(0, function (e) {\n        var t = e.toString(),\n            n = function (e) {\n          var r = /\\[code\\=([\\w-]*)/g.exec(e),\n              t = Array.isArray(r) && r[1];\n\n          switch (t || m(\"unknown StatusCode \", {\n            statusTxt: e\n          }), t) {\n            case \"unauthenticated\":\n              return 401;\n\n            case \"permission-denied\":\n              return 403;\n\n            case \"internal\":\n              return 0;\n\n            case \"invalid-argument\":\n              return 400;\n\n            case \"not-found\":\n              return 404;\n\n            case \"aborted\":\n              return 409;\n\n            case \"resource-exhausted\":\n              return 429;\n\n            case \"cancelled\":\n              return 499;\n\n            case \"internal\":\n              return 500;\n\n            case \"unimplemented\":\n              return 501;\n\n            case \"unavailable\":\n              return 503;\n\n            case \"deadline-exceeded\":\n              return 504;\n\n            default:\n              return 200;\n          }\n        }(t),\n            o = {\n          status: n,\n          message: t,\n          json: r\n        };\n\n        throw m(\"DataProvider:\", e, {\n          errorMsg: t,\n          code: n,\n          errorObj: o\n        }), o;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n      u = r || {};\n\n  !function (e, r) {\n    if (!(e || r && r.app)) throw new Error(\"Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider\");\n    r && r.rootRef && R(r.rootRef, \"test\");\n  }(e, u);\n\n  var c = function (e) {\n    return {\n      SetEnabled: function (e) {\n        g.SetEnabled(e);\n      },\n      ResetCount: function (e) {\n        e && localStorage.removeItem(P);\n      },\n      logDocument: function (r) {\n        if (null == e || null == (t = e.lazyLoading) || !t.enabled) return f;\n\n        var t,\n            n = function (e) {\n          void 0 === e && (e = 1);\n          var r = localStorage.getItem(P) || \"\",\n              t = (parseInt(r) || 0) + e;\n          return localStorage.setItem(P, t + \"\"), t;\n        }(r);\n\n        return g.log.bind(console, \"+\" + r + \" (session total=\" + n + \" documents read)\");\n      }\n    };\n  }(u);\n\n  d.SetEnabled(!(null == u || !u.logging)), c.SetEnabled(!(null == u || null == (t = u.firestoreCostsLogger) || !t.enabled)), c.ResetCount(!(null != u && null != (n = u.firestoreCostsLogger) && n.persistCount)), v(\"Creating FirebaseDataProvider\", {\n    firebaseConfig: e,\n    options: u\n  });\n  var h = new F();\n  h.init(e, r);\n  var p = new A(h, u, c);\n  return {\n    app: h.GetApp(),\n    getList: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            var n;\n            v(\"GetList\", {\n              resourceName: e,\n              params: r\n            });\n            var o = t.rm,\n                i = t.fireWrapper,\n                a = t.options;\n\n            if (null != a && null != (n = a.lazyLoading) && n.enabled) {\n              var u = new W(a, o, t);\n              return Promise.resolve(u.apiGetList(e, r));\n            }\n\n            var c = r.filter || {},\n                f = c.collectionQuery;\n            return delete c.collectionQuery, Promise.resolve(o.TryGetResource(e, \"REFRESH\", f)).then(function (e) {\n              var t;\n\n              function n(e) {\n                return t ? e : {\n                  data: v,\n                  total: m\n                };\n              }\n\n              var o = e.list;\n\n              if (null != r.sort) {\n                var u = r.sort;\n                s(o, u.field, \"ASC\" === u.order ? \"asc\" : \"desc\");\n              }\n\n              var f = o;\n              a.softDelete && !Object.keys(c).includes(\"deleted\") && (f = o.filter(function (e) {\n                return !e.deleted;\n              }));\n\n              var h = l(f, c),\n                  d = (r.pagination.page - 1) * r.pagination.perPage,\n                  v = h.slice(d, d + r.pagination.perPage),\n                  m = h.length,\n                  p = function () {\n                if (a.relativeFilePaths) return Promise.resolve(Promise.all(v.map(function (e) {\n                  return j(i, e);\n                }))).then(function (e) {\n                  return t = 1, {\n                    data: e,\n                    total: m\n                  };\n                });\n              }();\n\n              return p && p.then ? p.then(n) : n(p);\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    },\n    getOne: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            v(\"GetOne\", {\n              resourceName: e,\n              params: r\n            });\n            var n = t.rm,\n                o = t.fireWrapper;\n            return Promise.resolve(function (i, a) {\n              try {\n                var u = Promise.resolve(n.GetSingleDoc(e, r.id + \"\")).then(function (e) {\n                  return t.flogger.logDocument(1)(), Promise.resolve(j(o, e)).then(function (e) {\n                    return {\n                      data: e\n                    };\n                  });\n                });\n              } catch (e) {\n                return a();\n              }\n\n              return u && u.then ? u.then(void 0, a) : u;\n            }(0, function () {\n              throw new Error(\"Error getting id: \" + r.id + \" from collection: \" + e);\n            }));\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    },\n    getMany: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            var n = t.options,\n                i = t.fireWrapper;\n            return Promise.resolve(t.rm.TryGetResource(e)).then(function (a) {\n              v(\"GetMany\", {\n                resourceName: e,\n                resource: a,\n                params: r\n              });\n              var u = r.ids;\n              return Promise.resolve(Promise.all(u.map(function (e) {\n                return a.collection.doc(e + \"\").get();\n              }))).then(function (e) {\n                var r;\n\n                function a(e) {\n                  return r ? e : {\n                    data: c\n                  };\n                }\n\n                t.flogger.logDocument(u.length)();\n\n                var s = e.map(function (e) {\n                  return o({}, e.data(), {\n                    id: e.id\n                  });\n                }),\n                    c = n.softDelete ? s.filter(function (e) {\n                  return !e.deleted;\n                }) : s,\n                    l = function () {\n                  if (n.relativeFilePaths) return Promise.resolve(Promise.all(c.map(function (e) {\n                    return j(i, e);\n                  }))).then(function (e) {\n                    return r = 1, {\n                      data: e\n                    };\n                  });\n                }();\n\n                return l && l.then ? l.then(a) : a(l);\n              });\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    },\n    getManyReference: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            var n = t.rm,\n                o = t.options,\n                i = t.fireWrapper;\n            v(\"GetManyReference\", {\n              resourceName: e,\n              params: r\n            });\n            var a = r.filter || {};\n            return Promise.resolve(n.TryGetResource(e, \"REFRESH\", a.collectionQuery)).then(function (t) {\n              var n;\n\n              function u(e) {\n                return n ? e : {\n                  data: b,\n                  total: w\n                };\n              }\n\n              delete a.collectionQuery, v(\"apiGetManyReference\", {\n                resourceName: e,\n                resource: t,\n                params: r\n              });\n              var c = t.list,\n                  f = r.target,\n                  h = r.id,\n                  d = c;\n              o.softDelete && (d = c.filter(function (e) {\n                return !e.deleted;\n              }));\n              var m = l(d, a),\n                  p = {};\n              p[f] = h;\n              var g = l(m, p);\n\n              if (null != r.sort) {\n                var P = r.sort;\n                s(g, P.field, \"ASC\" === P.order ? \"asc\" : \"desc\");\n              }\n\n              var y = (r.pagination.page - 1) * r.pagination.perPage,\n                  b = g.slice(y, y + r.pagination.perPage),\n                  w = g.length,\n                  R = function () {\n                if (o.relativeFilePaths) return Promise.resolve(Promise.all(g.map(function (e) {\n                  return j(i, e);\n                }))).then(function (e) {\n                  return n = 1, {\n                    data: e,\n                    total: w\n                  };\n                });\n              }();\n\n              return R && R.then ? R.then(u) : u(R);\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    },\n    update: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            var n = t.rm;\n            v(\"Update\", {\n              resourceName: e,\n              params: r\n            });\n            var i = r.id + \"\";\n            return delete r.data.id, Promise.resolve(n.TryGetResource(e)).then(function (n) {\n              return v(\"Update\", {\n                resourceName: e,\n                resource: n,\n                params: r\n              }), Promise.resolve(t.parseDataAndUpload(n, i, r.data)).then(function (e) {\n                var r = o({}, e);\n                return t.checkRemoveIdField(r, i), Promise.resolve(t.addUpdatedByFields(r)).then(function () {\n                  return Promise.resolve(n.collection.doc(i).update(r)).then(function () {\n                    return {\n                      data: o({}, e, {\n                        id: i\n                      })\n                    };\n                  });\n                });\n              });\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    },\n    updateMany: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            var n = t.rm;\n            return v(\"UpdateMany\", {\n              resourceName: e,\n              params: r\n            }), delete r.data.id, Promise.resolve(n.TryGetResource(e)).then(function (n) {\n              return v(\"UpdateMany\", {\n                resourceName: e,\n                resource: n,\n                params: r\n              }), Promise.resolve(Promise.all(r.ids.map(function (e) {\n                try {\n                  var i = e + \"\";\n                  return Promise.resolve(t.parseDataAndUpload(n, i, r.data)).then(function (e) {\n                    var r = o({}, e);\n                    return t.checkRemoveIdField(r, i), Promise.resolve(t.addUpdatedByFields(r)).then(function () {\n                      return Promise.resolve(n.collection.doc(i).update(r)).then(function () {\n                        return o({}, e, {\n                          id: i\n                        });\n                      });\n                    });\n                  });\n                } catch (e) {\n                  return Promise.reject(e);\n                }\n              }))).then(function (e) {\n                return {\n                  data: e\n                };\n              });\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    },\n    create: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            var n = t.fireWrapper;\n            return Promise.resolve(t.rm.TryGetResource(e)).then(function (i) {\n              var a;\n\n              function u(e) {\n                if (a) return e;\n                var u = n.db().collection(\"collections\").doc().id;\n                return Promise.resolve(t.parseDataAndUpload(i, u, r.data)).then(function (e) {\n                  var r = o({}, e);\n                  return t.checkRemoveIdField(r, u), Promise.resolve(t.addCreatedByFields(r)).then(function () {\n                    return Promise.resolve(t.addUpdatedByFields(r)).then(function () {\n                      return Promise.resolve(i.collection.doc(u).set(r, {\n                        merge: !1\n                      })).then(function () {\n                        return {\n                          data: o({}, e, {\n                            id: u\n                          })\n                        };\n                      });\n                    });\n                  });\n                });\n              }\n\n              v(\"Create\", {\n                resourceName: e,\n                resource: i,\n                params: r\n              });\n              var s = r.data && r.data.id;\n              v(\"Create\", {\n                hasOverridenDocId: s\n              });\n\n              var c = function () {\n                if (s) {\n                  var e = r.data.id;\n                  return Promise.resolve(i.collection.doc(e).get()).then(function (n) {\n                    if (n.exists) throw new Error('the id:\"' + e + \"\\\" already exists, please use a unique string if overriding the 'id' field\");\n                    return Promise.resolve(t.parseDataAndUpload(i, e, r.data)).then(function (r) {\n                      if (!e) throw new Error(\"id must be a valid string\");\n                      var n = o({}, r);\n                      return t.checkRemoveIdField(n, e), Promise.resolve(t.addCreatedByFields(n)).then(function () {\n                        return Promise.resolve(t.addUpdatedByFields(n)).then(function () {\n                          return v(\"Create\", {\n                            docObj: n\n                          }), Promise.resolve(i.collection.doc(e).set(n, {\n                            merge: !1\n                          })).then(function () {\n                            return a = 1, {\n                              data: o({}, r, {\n                                id: e\n                              })\n                            };\n                          });\n                        });\n                      });\n                    });\n                  });\n                }\n              }();\n\n              return c && c.then ? c.then(u) : u(c);\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    },\n    delete: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            var n = t.rm;\n            return t.options.softDelete ? Promise.resolve(function (e, r, t) {\n              try {\n                var n = r.id + \"\";\n                return Promise.resolve(t.rm.TryGetResource(e)).then(function (o) {\n                  v(\"DeleteSoft\", {\n                    resourceName: e,\n                    resource: o,\n                    params: r\n                  });\n                  var i = {\n                    deleted: !0\n                  };\n                  return Promise.resolve(t.addUpdatedByFields(i)).then(function () {\n                    return o.collection.doc(n).update(i).catch(function (e) {\n                      m(\"DeleteSoft error\", {\n                        error: e\n                      });\n                    }), {\n                      data: r.previousData\n                    };\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, r, t)) : Promise.resolve(n.TryGetResource(e)).then(function (t) {\n              function n(e) {\n                return {\n                  data: r.previousData\n                };\n              }\n\n              v(\"apiDelete\", {\n                resourceName: e,\n                resource: t,\n                params: r\n              });\n\n              var o = function (e, n) {\n                try {\n                  var o = Promise.resolve(t.collection.doc(r.id + \"\").delete()).then(function () {});\n                } catch (e) {\n                  return n(e);\n                }\n\n                return o && o.then ? o.then(void 0, n) : o;\n              }(0, function (e) {\n                throw new Error(e);\n              });\n\n              return o && o.then ? o.then(n) : n();\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    },\n    deleteMany: function (e, r) {\n      return a(function () {\n        return function (e, r, t) {\n          try {\n            var n = t.rm,\n                o = t.fireWrapper;\n            return t.options.softDelete ? Promise.resolve(function (e, r, t) {\n              try {\n                return Promise.resolve(t.rm.TryGetResource(e)).then(function (n) {\n                  return v(\"DeleteManySoft\", {\n                    resourceName: e,\n                    resource: n,\n                    params: r\n                  }), Promise.resolve(Promise.all(r.ids.map(function (e) {\n                    try {\n                      var r = e + \"\",\n                          o = {\n                        deleted: !0\n                      };\n                      return Promise.resolve(t.addUpdatedByFields(o)).then(function () {\n                        return n.collection.doc(r).update(o).catch(function (e) {\n                          m(\"apiSoftDeleteMany error\", {\n                            error: e\n                          });\n                        }), r;\n                      });\n                    } catch (e) {\n                      return Promise.reject(e);\n                    }\n                  }))).then(function (e) {\n                    return {\n                      data: e\n                    };\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, r, t)) : Promise.resolve(n.TryGetResource(e)).then(function (t) {\n              function n(e) {\n                return {\n                  data: u\n                };\n              }\n\n              v(\"DeleteMany\", {\n                resourceName: e,\n                resource: t,\n                params: r\n              });\n\n              for (var a, u = [], s = o.db().batch(), c = function (e, r) {\n                var t = \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n                if (t) return (t = t.call(e)).next.bind(t);\n\n                if (Array.isArray(e) || (t = function (e, r) {\n                  if (e) {\n                    if (\"string\" == typeof e) return i(e, void 0);\n                    var t = Object.prototype.toString.call(e).slice(8, -1);\n                    return \"Object\" === t && e.constructor && (t = e.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(e) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? i(e, void 0) : void 0;\n                  }\n                }(e))) {\n                  t && (e = t);\n                  var n = 0;\n                  return function () {\n                    return n >= e.length ? {\n                      done: !0\n                    } : {\n                      done: !1,\n                      value: e[n++]\n                    };\n                  };\n                }\n\n                throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n              }(r.ids); !(a = c()).done;) {\n                var l = a.value,\n                    f = t.collection.doc(l + \"\");\n                s.delete(f), u.push(l);\n              }\n\n              var h = function (e, r) {\n                try {\n                  var t = Promise.resolve(s.commit()).then(function () {});\n                } catch (e) {\n                  return r(e);\n                }\n\n                return t && t.then ? t.then(void 0, r) : t;\n              }(0, function (e) {\n                throw new Error(e);\n              });\n\n              return h && h.then ? h.then(n) : n();\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }(e, r, p);\n      });\n    }\n  };\n};","map":{"version":3,"sources":["../src/misc/timestamp-parser.ts","../src/misc/document-parser.ts","../src/misc/arrayHelpers.ts","../src/misc/objectFlatten.ts","../src/misc/logger/logger-base.ts","../src/misc/logger/logger.ts","../src/misc/logger/firestore-logger.ts","../src/misc/file-parser.ts","../src/misc/pathHelper.ts","../src/providers/database/firebase/FirebaseWrapper.ts","../src/providers/database/ResourceManager.ts","../src/providers/database/FireClient.ts","../src/misc/metadata-parser.ts","../src/providers/lazy-loading/queryCursors.ts","../src/providers/lazy-loading/paramsToQuery.ts","../src/providers/lazy-loading/FirebaseLazyLoadingClient.ts","../src/providers/AuthProvider.ts","../src/misc/status-code-translator.ts","../src/providers/DataProvider.ts","../src/providers/queries/GetList.ts","../src/providers/queries/GetOne.ts","../src/providers/queries/GetMany.ts","../src/providers/queries/GetManyReference.ts","../src/providers/commands/Update.ts","../src/providers/commands/UpdateMany.ts","../src/providers/commands/Create.ts","../src/providers/commands/Delete.ts","../src/providers/commands/Delete.Soft.ts","../src/providers/commands/DeleteMany.ts","../src/providers/commands/DeleteMany.Soft.ts"],"names":["parseAllDatesDoc","obj","Object","keys","map","key","recusivelyCheckObjectValue","input","toDate","Array","isArray","value","parseFireStoreDocument","doc","data","id","sortArray","field","dir","sort","a","b","rawA","get","rawB","isAsc","Number","isFinite","basicSort","toLowerCase","Date","aValue","bValue","filterArray","searchFields","isEmpty","searchObjs","fieldName","getSubObjects","getFieldReferences","push","filter","row","reduce","acc","cur","doesRowMatch","searchField","searchValue","searchThis","toString","includes","tree","objectFlatten","leaves","recursivelyWalk","path","hasOwnProperty","objVal","currentPath","LogNoOp","LoggerBase","title","cacheEnabledKey","isEnabled","localStorage","getItem","this","SetEnabled","setItem","removeItem","console","log","bind","warn","error","logger","logError","logWarn","KEY_SINGLE","options","lazyLoading","enabled","incrementBy","currentCountRaw","parseInt","incremented","ResetCount","shouldReset","logDocument","docCount","count","incrementRead","then","result","uploads","state","recusivelyParseObjectValue","_settle","fieldPath","onRejected","index","fieldDotsPath","fieldSlashesPath","split","join","rawFile","s","recursivelyMapStorageUrls","fireWrapper","fieldValue","isObject","isFileField","src","startsWith","ref","pact","storage","getDownloadURL","_exit2","i","getAbsolutePath","rootRef","relativePath","Error","rootRefValue","withSlashes","length","slice","joinPaths","FirebaseWrapper","GetApp","app","init","firebaseConfig","optionsSafe","ObtainFirebaseApp","firestore","db","serverTimestamp","auth","GetUserLogin","Promise","resolve","reject","onAuthStateChanged","user","OnUserLogout","callBack","isLoggedOut","firebase","apps","initializeApp","ResourceManager","flogger","_this","resources","TryGetResource","resourceName","refresh","collectionQuery","RefreshResource","TryGetResourcePromise","GetResource","resource","initPath","_this5","_this7","collection","query","applyQuery","newDocs","list","docs","collectionPath","GetSingleDoc","docId","_this9","docSnap","exists","absolutePath","hasBeenInited","pathAbsolute","allResources","getUserIdentifier","associateUsersById","getCurrentUserId","getCurrentUserEmail","email","uid","collRef","FireClient","rm","checkRemoveIdField","dontAddIdFieldToDoc","parseDataAndUpload","r","docPath","parseDocGetAllUploads","all","u","link","uploadAndGetLink","_this2","useFileNamesInStorage","set","addCreatedByFields","AddCreatedByFields","addUpdatedByFields","AddUpdatedByFields","useFileName","storagePath","name","saveFile","task","put","taskResult","res","rej","relativeFilePaths","storageError","code","disableMeta","currentUserIdentifier","createAtSelector","GetSelectorsCreateAt","createBySelector","GetSelectorsCreateBy","updateAtSelector","GetSelectorsUpdateAt","updateBySelector","GetSelectorsUpdateBy","renameMetaFields","updated_at","casing","metaFieldCasing","updated_by","created_at","created_by","params","btoa","JSON","stringify","allCursorsKey","localCursorKeys","parse","newCursors","callback","concat","getQueryCursor","v","forEach","cursor","queryBase","page","perPage","pagination","lastQueryCursor","currentPage","currentPageParams","limit","startAt","newQuery","snapshots","docsLength","thenable","defaultParamsToQueryOptions","filters","paramsToQuery","filtersStepQuery","sortStepQuery","sortToQuery","paginationToQuery","where","order","parsedOrder","toLocaleLowerCase","orderBy","queryCursor","findLastQueryCursor","startAfter","getFullParamsForQuery","reactAdminParams","softdeleteEnabled","deleted","FirebaseLazyLoadingClient","client","apiGetList","tryGetResource","softDelete","resultsCount","message","total","nextPageCursor","setQueryCursor","getNextPageParams","isOnLastPage","checkIfOnLastPage","parsedData","apiGetManyReference","filterWithTarget","target","_this4","nextElementSnapshot","array","empty","clearQueryCursors","AuthClient","optionsInput","persistence","setPersistence","persistenceInput","persistenceResolved","Auth","Persistence","LOCAL","NONE","SESSION","HandleAuthLogin","username","password","signInWithEmailAndPassword","getUserLogin","HandleAuthLogout","signOut","HandleAuthError","errorHttp","status","retrieveStatusTxt","HandleAuthCheck","currentUser","unsubscribe","HandleGetPermissions","token","getIdTokenResult","claims","e","HandleGetIdentity","displayName","photoURL","fullName","avatar","HandleGetJWTAuthTime","authTime","HandleGetJWTExpirationTime","expirationTime","HandleGetJWTSignInProvider","signInProvider","HandleGetJWTIssuedAtTime","issuedAtTime","HandleGetJWTToken","VerifyAuthProviderArgs","logging","login","logout","checkAuth","checkError","getPermissions","getIdentity","getAuthUser","getJWTAuthTime","getJWTExpirationTime","getJWTSignInProvider","getJWTClaims","getJWTToken","statusTxt","regexResult","exec","verifyDataProviderArgs","MakeFirestoreLogger","firestoreCostsLogger","persistCount","run","cb","errorMsg","retrieveStatusCode","errorObj","json","getList","GetList","getOne","GetOne","getMany","GetMany","getManyReference","GetManyReference","update","Update","updateMany","UpdateMany","create","Create","Delete","deleteMany","DeleteMany","lazyClient","filterSafe","softDeleted","filteredData","pageStart","dataPage","dataSingle","ids","matchDocSnaps","matches","snap","permittedData","targetField","targetValue","targetIdFilter","docObj","returnData","idStr","hasOverridenDocId","overridenId","_r$collection$doc$get","merge","newId","DeleteSoft","previousData","DeleteManySoft","batch","docToDelete","commit"],"mappings":"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","sourcesContent":["export function parseAllDatesDoc(obj: any) {\n  const isObject = !!obj && typeof obj === 'object';\n  if (!isObject) {\n    return;\n  }\n  Object.keys(obj).map(key => {\n    const value = obj[key];\n    obj[key] = recusivelyCheckObjectValue(value);\n  });\n}\n\nexport function recusivelyCheckObjectValue(input: any): any {\n  const isFalsey = !input;\n  if (isFalsey) {\n    return input;\n  }\n  const isPrimitive = typeof input !== 'object';\n  if (isPrimitive) {\n    return input;\n  }\n  const isTimestamp = !!input.toDate && typeof input.toDate === 'function';\n  if (isTimestamp) {\n    return input.toDate();\n  }\n  const isArray = Array.isArray(input);\n  if (isArray) {\n    return (input as []).map(value => recusivelyCheckObjectValue(value));\n  }\n  const isObject = typeof input === 'object';\n  if (isObject) {\n    Object.keys(input).map(key => {\n      const value = input[key];\n      input[key] = recusivelyCheckObjectValue(value);\n    });\n    return input;\n  }\n}\n","import { QueryDocumentSnapshot } from '@firebase/firestore-types';\nimport { parseAllDatesDoc } from './timestamp-parser';\n\nexport const parseFireStoreDocument = (doc: QueryDocumentSnapshot) => {\n  const data = doc.data();\n  parseAllDatesDoc(data);\n  // React Admin requires an id field on every document,\n  // So we can just using the firestore document id\n  return { id: doc.id, ...data };\n};\n","import { get, isEmpty } from 'lodash';\nimport { getFieldReferences, SearchObj } from './objectFlatten';\n\nexport function sortArray(\n  data: Array<{}>,\n  field: string,\n  dir: 'asc' | 'desc'\n): void {\n  data.sort((a: {}, b: {}) => {\n    const rawA = get(a, field);\n    const rawB = get(b, field);\n    const isAsc = dir === \"asc\";\n\n    const isNumberField = Number.isFinite(rawA) && Number.isFinite(rawB);\n    if (isNumberField) {\n      return basicSort(rawA, rawB, isAsc);\n    }\n    const isStringField = typeof rawA === 'string' && typeof rawB === 'string';\n    if (isStringField) {\n      const aParsed = rawA.toLowerCase();\n      const bParsed = rawB.toLowerCase();\n      return basicSort(aParsed, bParsed, isAsc);\n    }\n    const isDateField = rawA instanceof Date && rawB instanceof Date;\n    if (isDateField) {\n      return basicSort(rawA, rawB, isAsc);\n    }\n    return basicSort(!!rawA, !!rawB, isAsc);\n  });\n}\n\nfunction basicSort(aValue: any, bValue: any, isAsc: boolean) {\n  if (aValue > bValue) {\n    return isAsc ? 1 : -1;\n  }\n  if (aValue < bValue) {\n    return isAsc ? -1 : 1;\n  }\n  return 0;\n}\n\nexport function filterArray(\n  data: Array<{}>,\n  searchFields?: { [field: string]: string | number | boolean | null }\n): Array<{}> {\n  if (!searchFields || isEmpty(searchFields)) {\n    return data;\n  }\n  const searchObjs: SearchObj[] = [];\n  Object.keys(searchFields).map((fieldName) => {\n    const fieldValue = searchFields[fieldName];\n    const getSubObjects = getFieldReferences(fieldName, fieldValue);\n    searchObjs.push(...getSubObjects);\n  });\n  const filtered = data.filter((row) =>\n    searchObjs.reduce((acc, cur) => {\n      const res = doesRowMatch(row, cur.searchField, cur.searchValue);\n      return res && acc;\n    }, true as boolean)\n  );\n  return filtered;\n}\n\nexport function doesRowMatch(\n  row: {},\n  searchField: string,\n  searchValue: any\n): boolean {\n  const searchThis = get(row, searchField);\n  const bothAreFalsey = !searchThis && !searchValue;\n  if (bothAreFalsey) {\n    return true;\n  }\n  const nothingToSearch = !searchThis;\n  if (nothingToSearch) {\n    return false;\n  }\n  const isStringSearch = typeof searchValue === 'string';\n  if (isStringSearch) {\n    return searchThis\n      .toString()\n      .toLowerCase()\n      .includes(searchValue.toLowerCase());\n  }\n  const isBooleanOrNumber =\n    typeof searchValue === 'boolean' || typeof searchValue === 'number';\n  if (isBooleanOrNumber) {\n    return searchThis === searchValue;\n  }\n  return false;\n}\n","export interface SearchObj {\n  searchField: string;\n  searchValue: number | string | boolean | null;\n}\nexport function getFieldReferences(\n  fieldName: string,\n  value: {} | number | string | boolean | null\n): SearchObj[] {\n  const isFalsy = !value;\n  const isSimple = isFalsy ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean';\n\n  if (isSimple) {\n    return [\n      {\n        searchField: fieldName,\n        searchValue: value as number | string | boolean | null,\n      },\n    ];\n  }\n  const tree = {} as any;\n  tree[fieldName] = value;\n  return objectFlatten(tree);\n}\n\nexport function objectFlatten(tree: {}): SearchObj[] {\n  var leaves: SearchObj[] = [];\n  var recursivelyWalk = function (obj: any, path: string | null) {\n    path = path || \"\";\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const objVal = obj && obj[key];\n        const currentPath = !!path ? path + \".\" + key : key;\n        const isWalkable =\n          typeof objVal === 'object' || objVal instanceof Array;\n        if (isWalkable) {\n          recursivelyWalk(objVal, currentPath);\n        } else {\n          leaves.push({ searchField: currentPath, searchValue: objVal });\n        }\n      }\n    }\n  };\n  recursivelyWalk(tree, null);\n  return leaves;\n}\n","type LogFn = (...args: any) => void;\n\nexport const LogNoOp: LogFn = (...args: any) => null;\n\nexport class LoggerBase {\n  constructor(private title: string, private cacheEnabledKey: string) {}\n\n  private isEnabled() {\n    return !!localStorage.getItem(this.cacheEnabledKey);\n  }\n\n  SetEnabled(isEnabled: boolean) {\n    if (isEnabled) {\n      localStorage.setItem(this.cacheEnabledKey, 'true');\n    } else {\n      localStorage.removeItem(this.cacheEnabledKey);\n    }\n  }\n\n  public get log() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.log.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n\n  public get warn() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.warn.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n\n  public get error() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.error.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n}\n","import { LoggerBase } from './logger-base';\n\nconst LOGGER_ENABLEDKEY = 'LOGGING_ENABLED';\nexport const logger = new LoggerBase('ðŸ”¥raf:', LOGGER_ENABLEDKEY);\n\nexport const log = logger.log;\nexport const logError = logger.error;\nexport const logWarn = logger.warn;\n","import { RAFirebaseOptions } from 'providers/options';\nimport { LogNoOp, LoggerBase } from './logger-base';\n\nconst LOGGER_ENABLEDKEY = 'LOGGING_FIRESTORE_COSTS_ENABLED';\nconst logger = new LoggerBase('ðŸ’¸firestore-costs:', LOGGER_ENABLEDKEY);\n\nconst KEY_SINGLE = 'firecosts-single-reads';\n\nexport interface IFirestoreLogger {\n  logDocument: (count: number) => Function;\n  SetEnabled: (isEnabled: boolean) => void;\n  ResetCount: (shouldReset: boolean) => void;\n}\n\nexport function MakeFirestoreLogger(\n  options: RAFirebaseOptions\n): IFirestoreLogger {\n  function notEnabled() {\n    return !options?.lazyLoading?.enabled;\n  }\n\n  function incrementRead(incrementBy = 1) {\n    const currentCountRaw = localStorage.getItem(KEY_SINGLE) || '';\n    const currentCount = parseInt(currentCountRaw) || 0;\n    const incremented = currentCount + incrementBy;\n    localStorage.setItem(KEY_SINGLE, incremented + '');\n    return incremented;\n  }\n  function clearCache() {\n    localStorage.removeItem(KEY_SINGLE);\n  }\n  return {\n    SetEnabled(isEnabled: boolean) {\n      logger.SetEnabled(isEnabled);\n    },\n    ResetCount(shouldReset: boolean) {\n      shouldReset && clearCache()\n    },\n    logDocument(docCount: number) {\n      if (notEnabled()) {\n        return LogNoOp;\n      }\n      const count = incrementRead(docCount);\n      const suffix = `+${docCount} (session total=${count} documents read)`;\n      const boundLogFn: (...args: any) => void = logger.log.bind(\n        console,\n        suffix\n      );\n      return boundLogFn;\n    },\n  };\n}\n","import { logError } from './logger';\nimport { IFirebaseWrapper } from '../providers/database/firebase/IFirebaseWrapper';\n\ninterface ParsedUpload {\n  fieldDotsPath: string;\n  fieldSlashesPath: string;\n  rawFile: File | any;\n}\n\nexport function parseDocGetAllUploads(obj: any): ParsedUpload[] {\n  const isObject = !!obj && typeof obj === \"object\";\n  if (!isObject) {\n    return [];\n  }\n  const uploads: ParsedUpload[] = [];\n  Object.keys(obj).map((key) => {\n    const value = obj[key];\n    recusivelyParseObjectValue(value, key, uploads);\n  });\n  return uploads;\n}\n\nexport function recusivelyParseObjectValue(\n  input: any,\n  fieldPath: string,\n  uploads: ParsedUpload[]\n): any {\n  const isFalsey = !input;\n  if (isFalsey) {\n    return input;\n  }\n  const isPrimitive = typeof input !== 'object';\n  if (isPrimitive) {\n    return input;\n  }\n  const isTimestamp = !!input.toDate && typeof input.toDate === 'function';\n  if (isTimestamp) {\n    return input.toDate();\n  }\n  const isArray = Array.isArray(input);\n  if (isArray) {\n    return (input as []).map((value, index) =>\n      recusivelyParseObjectValue(value, `${fieldPath}.${index}`, uploads)\n    );\n  }\n  const isObject = typeof input === 'object';\n  if (!isObject) {\n    return;\n  }\n  const isFileField = !!input && input.hasOwnProperty('rawFile');\n  if (isFileField) {\n    uploads.push({\n      fieldDotsPath: fieldPath,\n      fieldSlashesPath: fieldPath.split('.').join('/'),\n      rawFile: input.rawFile\n    });\n    delete input.rawFile;\n    return;\n  }\n  Object.keys(input).map((key) => {\n    const value = input[key];\n    recusivelyParseObjectValue(value, `${fieldPath}.${key}`, uploads);\n  });\n  return input;\n}\n\nexport const recursivelyMapStorageUrls = async (\n  fireWrapper: IFirebaseWrapper,\n  fieldValue: any\n): Promise<any> => {\n  const isArray = Array.isArray(fieldValue);\n  const isObject = !isArray && typeof fieldValue === \"object\";\n  const isFileField = isObject && !!fieldValue && fieldValue.hasOwnProperty(\"src\");\n  if (isFileField) {\n    const isAlreadyUploaded = fieldValue.src.startsWith('https://');\n    if (isAlreadyUploaded) {\n      return fieldValue;\n    }\n    let ref: firebase.storage.Reference = null as any;\n    try {\n      ref = fireWrapper.storage().ref(fieldValue.src);\n      const src = await ref.getDownloadURL();\n      return {\n        ...fieldValue,\n        src\n      };\n    } catch (error) {\n      logError(`Error when getting download URL`, {\n        error,\n        fieldValue,\n        ref\n      });\n      return fieldValue;\n    }\n  } else if (isObject) {\n    for (let key in fieldValue) {\n      if (fieldValue.hasOwnProperty(key)) {\n        const value = fieldValue[key];\n        fieldValue[key] = await recursivelyMapStorageUrls(fireWrapper, value);\n      }\n    }\n\n    return fieldValue;\n  } else if (isArray) {\n    for (let i = 0; i < fieldValue.length; i++) {\n      fieldValue[i] = await recursivelyMapStorageUrls(fireWrapper, fieldValue[i])\n    }\n\n    return fieldValue;\n  }\n\n  return fieldValue;\n};\n","import path from \"path-browserify\";\n\nexport function getAbsolutePath(\n  rootRef: undefined | string | (() => string),\n  relativePath: string | null\n): string {\n  if (!rootRef) {\n    return relativePath+'';\n  }\n  if (!relativePath) {\n    throw new Error(\n      \"Resource name must be a string of length greater than 0 characters\"\n    );\n  }\n  const rootRefValue = typeof rootRef === \"string\" ? rootRef : rootRef();\n  const withSlashes = path.join(\"/\", rootRefValue, \"/\", relativePath, \"/\");\n  const slashCount = withSlashes.split(\"/\").length - 1;\n  if (slashCount % 2) {\n    throw new Error(`The rootRef path must point to a \"document\"\n    not a \"collection\"e.g. /collection/document/ or\n    /collection/document/collection/document/`);\n  }\n  return withSlashes.slice(1, -1);\n}\n\nexport function joinPaths(...args: string[]) {\n  return path.join(...args);\n}\n","import { FireApp, IFirebaseWrapper } from './IFirebaseWrapper';\n\nimport firebase, { User } from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport { log } from 'misc';\nimport { RAFirebaseOptions } from 'providers/options';\n\nexport class FirebaseWrapper implements IFirebaseWrapper {\n  private firestore: firebase.firestore.Firestore = null as any;\n  private app: FireApp = null as any;\n  public options: RAFirebaseOptions = {};\n\n  public GetApp(): FireApp {\n    return this.app;\n  }\n\n  constructor() {}\n\n  public init(firebaseConfig: {}, options?: RAFirebaseOptions): void {\n    const optionsSafe = options || {};\n    this.options = optionsSafe;\n    this.app = ObtainFirebaseApp(firebaseConfig, optionsSafe);\n    this.firestore = this.app.firestore();\n  }\n  public db(): firebase.firestore.Firestore {\n    return this.firestore;\n  }\n  public serverTimestamp() {\n    // This line doesn't work for some reason, might be firebase sdk.\n    // return firebase.firestore.FieldValue.serverTimestamp();\n    return new Date();\n  }\n  public auth() {\n    return this.app.auth() as any;\n  }\n  public storage() {\n    return this.app.storage();\n  }\n  public async GetUserLogin(): Promise<User> {\n    return new Promise((resolve, reject) => {\n      this.app.auth().onAuthStateChanged((user) => {\n        if (user) {\n          resolve(user);\n        } else {\n          reject('getUserLogin() no user logged in');\n        }\n      });\n    });\n  }\n  public OnUserLogout(callBack: (u: firebase.User | null) => any) {\n    this.app.auth().onAuthStateChanged((user) => {\n      const isLoggedOut = !user;\n      log('FirebaseWrapper.OnUserLogout', { user, isLoggedOut });\n      if (isLoggedOut) {\n        callBack(user);\n      }\n    });\n  }\n}\n\nfunction ObtainFirebaseApp(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n): firebase.app.App {\n  if (options.app) {\n    return options.app;\n  }\n  const isInitialized = !!firebase.apps.length;\n  if (isInitialized) {\n    return firebase.app();\n  } else {\n    return firebase.initializeApp(firebaseConfig);\n  }\n}\n","// Firebase types\nimport {\n  CollectionReference,\n  QueryDocumentSnapshot,\n  FirebaseFirestore,\n} from '@firebase/firestore-types';\nimport { RAFirebaseOptions } from '../options';\nimport { IFirebaseWrapper } from './firebase/IFirebaseWrapper';\nimport {\n  log,\n  getAbsolutePath,\n  messageTypes,\n  parseAllDatesDoc,\n  logWarn,\n  IFirestoreLogger,\n} from '../../misc';\n\nexport interface IResource {\n  path: string;\n  pathAbsolute: string;\n  collection: CollectionReference;\n  list: Array<{} & { deleted?: boolean }>;\n}\n\nexport class ResourceManager {\n  private resources: {\n    [resourceName: string]: IResource;\n  } = {};\n\n  private db: FirebaseFirestore;\n\n  constructor(\n    private fireWrapper: IFirebaseWrapper,\n    private options: RAFirebaseOptions,\n    private flogger: IFirestoreLogger\n  ) {\n    this.db = fireWrapper.db();\n\n    this.fireWrapper.OnUserLogout(() => {\n      this.resources = {};\n    });\n  }\n\n  public async TryGetResource(\n    resourceName: string,\n    refresh?: 'REFRESH',\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    if (refresh) {\n      await this.RefreshResource(resourceName, collectionQuery);\n    }\n    return this.TryGetResourcePromise(resourceName, collectionQuery);\n  }\n\n  public GetResource(relativePath: string): IResource {\n    const resource: IResource = this.resources[relativePath];\n    if (!resource) {\n      throw new Error(\n        `react-admin-firebase: Can't find resource: \"${relativePath}\"`\n      );\n    }\n    return resource;\n  }\n\n  public async TryGetResourcePromise(\n    relativePath: string,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    log('resourceManager.TryGetResourcePromise', {\n      relativePath,\n      collectionQuery,\n    });\n    await this.initPath(relativePath);\n\n    const resource: IResource = this.resources[relativePath];\n    if (!resource) {\n      throw new Error(\n        `react-admin-firebase: Cant find resource: \"${relativePath}\"`\n      );\n    }\n    return resource;\n  }\n\n  public async RefreshResource(\n    relativePath: string,\n    collectionQuery: messageTypes.CollectionQueryType | undefined\n  ) {\n    if (this.options?.lazyLoading?.enabled) {\n      logWarn('resourceManager.RefreshResource', {\n        warn: 'RefreshResource is not available in lazy loading mode',\n      });\n      throw new Error(\n        'react-admin-firebase: RefreshResource is not available in lazy loading mode'\n      );\n    }\n\n    log('resourceManager.RefreshResource', { relativePath, collectionQuery });\n    await this.initPath(relativePath);\n    const resource = this.resources[relativePath];\n\n    const collection = resource.collection;\n    const query = this.applyQuery(collection, collectionQuery);\n    const newDocs = await query.get();\n\n    resource.list = newDocs.docs.map((doc) => this.parseFireStoreDocument(doc));\n    const count = newDocs.docs.length;\n    this.flogger.logDocument(count)();\n    log('resourceManager.RefreshResource', {\n      newDocs,\n      resource,\n      collectionPath: collection.path,\n    });\n  }\n\n  public async GetSingleDoc(relativePath: string, docId: string) {\n    await this.initPath(relativePath);\n    const resource = this.GetResource(relativePath);\n    this.flogger.logDocument(1)();\n    const docSnap = await resource.collection.doc(docId).get();\n    if (!docSnap.exists) {\n      throw new Error('react-admin-firebase: No id found matching: ' + docId);\n    }\n    const result = this.parseFireStoreDocument(docSnap as any);\n    log('resourceManager.GetSingleDoc', {\n      relativePath,\n      resource,\n      docId,\n      docSnap,\n      result,\n    });\n    return result;\n  }\n\n  private async initPath(relativePath: string): Promise<void> {\n    const rootRef = this.options && this.options.rootRef;\n    const absolutePath = getAbsolutePath(rootRef, relativePath);\n    const hasBeenInited = !!this.resources[relativePath];\n    log('resourceManager.initPath()', {\n      absolutePath,\n      hasBeenInited,\n    });\n    if (hasBeenInited) {\n      log('resourceManager.initPath() has been initialized already...');\n      return;\n    }\n    const collection = this.db.collection(absolutePath);\n    const list: Array<{}> = [];\n    const resource: IResource = {\n      collection,\n      list,\n      path: relativePath,\n      pathAbsolute: absolutePath,\n    };\n    this.resources[relativePath] = resource;\n    log('resourceManager.initPath() setting resource...', {\n      resource,\n      allResources: this.resources,\n      collection: collection,\n      collectionPath: collection.path,\n    });\n  }\n\n  private parseFireStoreDocument(doc: QueryDocumentSnapshot | undefined): {} {\n    if (!doc) {\n      logWarn('parseFireStoreDocument: no doc', { doc });\n      return {};\n    }\n    const data = doc.data();\n    parseAllDatesDoc(data);\n    // React Admin requires an id field on every document,\n    // So we can just using the firestore document id\n    return { id: doc.id, ...data };\n  }\n\n  public async getUserIdentifier(): Promise<string> {\n    const identifier = this.options.associateUsersById\n      ? await this.getCurrentUserId()\n      : await this.getCurrentUserEmail();\n    return identifier;\n  }\n\n  private async getCurrentUserEmail() {\n    const user = await this.fireWrapper.GetUserLogin();\n    if (user) {\n      return user.email as string;\n    } else {\n      return 'annonymous user';\n    }\n  }\n  private async getCurrentUserId() {\n    const user = await this.fireWrapper.GetUserLogin();\n    if (user) {\n      return user.uid;\n    } else {\n      return 'annonymous user';\n    }\n  }\n\n  private applyQuery(\n    collection: CollectionReference,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): CollectionReference {\n    const collRef: CollectionReference = collectionQuery\n      ? collectionQuery(collection)\n      : collection;\n\n    log('resourceManager.applyQuery() ...', {\n      collection,\n      collectionQuery: (collectionQuery || '-').toString(),\n      collRef,\n    });\n    return collRef;\n  }\n}\n","import { set } from \"lodash\";\nimport {\n  AddCreatedByFields,\n  AddUpdatedByFields,\n  IFirestoreLogger,\n  joinPaths,\n  log,\n  logError,\n  parseDocGetAllUploads,\n} from \"../../misc\";\nimport { RAFirebaseOptions } from \"../options\";\nimport { IFirebaseWrapper } from \"./firebase/IFirebaseWrapper\";\nimport { IResource, ResourceManager } from \"./ResourceManager\";\n\nexport class FireClient {\n  public rm: ResourceManager;\n  public db() {\n    return this.fireWrapper.db();\n  }\n\n  constructor(\n    public fireWrapper: IFirebaseWrapper,\n    public options: RAFirebaseOptions,\n    public flogger: IFirestoreLogger\n  ) {\n    this.rm = new ResourceManager(this.fireWrapper, this.options, this.flogger);\n  }\n\n  public checkRemoveIdField(obj: any, docId: string) {\n    if (!this.options.dontAddIdFieldToDoc) {\n      obj.id = docId;\n    }\n  }\n\n  public async parseDataAndUpload(r: IResource, id: string, data: any) {\n    if (!data) {\n      return data;\n    }\n    const docPath = r.collection.doc(id).path;\n\n    const uploads = parseDocGetAllUploads(data);\n    await Promise.all(\n      uploads.map(async (u) => {\n        const link = await this.uploadAndGetLink(\n          u.rawFile,\n          docPath,\n          u.fieldSlashesPath,\n          !!this.options.useFileNamesInStorage\n        );\n        set(data, u.fieldDotsPath + \".src\", link);\n      })\n    );\n    return data;\n  }\n\n  public async addCreatedByFields(obj: any) {\n    return AddCreatedByFields(obj, this.fireWrapper, this.rm, this.options);\n  }\n\n  public async addUpdatedByFields(obj: any) {\n    return AddUpdatedByFields(obj, this.fireWrapper, this.rm, this.options);\n  }\n\n  private async uploadAndGetLink(\n    rawFile: any,\n    docPath: string,\n    fieldPath: string,\n    useFileName: boolean\n  ): Promise<string | undefined> {\n    const storagePath = useFileName\n      ? joinPaths(docPath, fieldPath, rawFile.name)\n      : joinPaths(docPath, fieldPath);\n    return this.saveFile(storagePath, rawFile);\n  }\n\n  private async saveFile(\n    storagePath: string,\n    rawFile: any\n  ): Promise<string | undefined> {\n    log(\"saveFile() saving file...\", { storagePath, rawFile });\n    const task = this.fireWrapper.storage().ref(storagePath).put(rawFile);\n    try {\n      const taskResult: firebase.storage.UploadTaskSnapshot = await new Promise(\n        (res, rej) => task.then(res).catch(rej)\n      );\n      const getDownloadURL = await taskResult.ref.getDownloadURL();\n      log(\"saveFile() saved file\", {\n        storagePath,\n        taskResult,\n        getDownloadURL,\n      });\n      return this.options.relativeFilePaths ? storagePath : getDownloadURL;\n    } catch (storageError) {\n      if (storageError.code === \"storage/unknown\") {\n        logError(\n          'saveFile() error saving file, No bucket found! Try clicking \"Get Started\" in firebase -> storage',\n          { storageError }\n        );\n      } else {\n        logError(\"saveFile() error saving file\", {\n          storageError,\n        });\n      }\n    }\n  }\n}\n","import { RAFirebaseOptions } from \"index\";\nimport { IFirebaseWrapper, ResourceManager } from \"providers/database\";\n\nexport async function AddCreatedByFields(\n  obj: any,\n  fireWrapper: IFirebaseWrapper,\n  rm: Pick<ResourceManager, \"getUserIdentifier\">,\n  options: Pick<\n    RAFirebaseOptions,\n    | \"associateUsersById\"\n    | \"disableMeta\"\n    | \"renameMetaFields\"\n    | \"metaFieldCasing\"\n  >\n) {\n  if (options.disableMeta) {\n    return;\n  }\n  const currentUserIdentifier = await rm.getUserIdentifier();\n  const createAtSelector = GetSelectorsCreateAt(options);\n  const createBySelector = GetSelectorsCreateBy(options);\n  obj[createAtSelector] = fireWrapper.serverTimestamp();\n  obj[createBySelector] = currentUserIdentifier;\n}\n\nexport async function AddUpdatedByFields(\n  obj: any,\n  fireWrapper: IFirebaseWrapper,\n  rm: Pick<ResourceManager, \"getUserIdentifier\">,\n  options: Pick<\n    RAFirebaseOptions,\n    | \"associateUsersById\"\n    | \"disableMeta\"\n    | \"renameMetaFields\"\n    | \"metaFieldCasing\"\n  >\n) {\n  if (options.disableMeta) {\n    return;\n  }\n  const currentUserIdentifier = await rm.getUserIdentifier();\n  const updateAtSelector = GetSelectorsUpdateAt(options);\n  const updateBySelector = GetSelectorsUpdateBy(options);\n  obj[updateAtSelector] = fireWrapper.serverTimestamp();\n  obj[updateBySelector] = currentUserIdentifier;\n}\n\nexport function GetSelectorsUpdateAt(\n  options: Pick<RAFirebaseOptions, \"metaFieldCasing\" | \"renameMetaFields\">\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.updated_at) {\n    return options.renameMetaFields.updated_at;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = \"lastupdate\";\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === \"camel\") {\n    return \"lastUpdate\";\n  }\n  if (casing === \"snake\") {\n    return \"last_update\";\n  }\n  if (casing === \"pascal\") {\n    return \"LastUpdate\";\n  }\n  if (casing === \"kebab\") {\n    return \"last-update\";\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsUpdateBy(\n  options: Pick<RAFirebaseOptions, \"metaFieldCasing\" | \"renameMetaFields\">\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.updated_by) {\n    return options.renameMetaFields.updated_by;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = \"updatedby\";\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === \"camel\") {\n    return \"updatedBy\";\n  }\n  if (casing === \"snake\") {\n    return \"updated_by\";\n  }\n  if (casing === \"pascal\") {\n    return \"UpdatedBy\";\n  }\n  if (casing === \"kebab\") {\n    return \"updated-by\";\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsCreateAt(\n  options: Pick<RAFirebaseOptions, \"metaFieldCasing\" | \"renameMetaFields\">\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.created_at) {\n    return options.renameMetaFields.created_at;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = \"createdate\";\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === \"camel\") {\n    return \"createDate\";\n  }\n  if (casing === \"snake\") {\n    return \"create_date\";\n  }\n  if (casing === \"pascal\") {\n    return \"CreateDate\";\n  }\n  if (casing === \"kebab\") {\n    return \"create-date\";\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsCreateBy(\n  options: Pick<RAFirebaseOptions, \"metaFieldCasing\" | \"renameMetaFields\">\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.created_by) {\n    return options.renameMetaFields.created_by;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = \"createdby\";\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === \"camel\") {\n    return \"createdBy\";\n  }\n  if (casing === \"snake\") {\n    return \"created_by\";\n  }\n  if (casing === \"pascal\") {\n    return \"CreatedBy\";\n  }\n  if (casing === \"kebab\") {\n    return \"created-by\";\n  }\n  return defautCase;\n}\n","import {\n  CollectionReference,\n  DocumentSnapshot,\n  Query,\n} from '@firebase/firestore-types';\nimport { IFirestoreLogger, messageTypes } from '../../misc';\n\nexport function setQueryCursor(\n  doc: DocumentSnapshot,\n  params: messageTypes.IParamsGetList,\n  resourceName: string\n) {\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\n  localStorage.setItem(key, doc.id);\n\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\n  if (!localCursorKeys) {\n    localStorage.setItem(allCursorsKey, JSON.stringify([key]));\n  } else {\n    const cursors: string[] = JSON.parse(localCursorKeys);\n    const newCursors = cursors.concat(key);\n    localStorage.setItem(allCursorsKey, JSON.stringify(newCursors));\n  }\n}\n\nexport async function getQueryCursor(\n  collection: CollectionReference,\n  params: messageTypes.IParamsGetList,\n  resourceName: string,\n  flogger: IFirestoreLogger\n): Promise<DocumentSnapshot | false> {\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\n  const docId = localStorage.getItem(key);\n  if (!docId) {\n    return false;\n  }\n\n  const doc = await collection.doc(docId).get();\n  flogger.logDocument(1)();\n  if (doc.exists) {\n    // incrementFirebaseReadsCounter(1);\n    return doc;\n  }\n  return false;\n}\n\nexport function clearQueryCursors(resourceName: string) {\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\n  if (localCursorKeys) {\n    const cursors: string[] = JSON.parse(localCursorKeys);\n    cursors.forEach((cursor) => localStorage.removeItem(cursor));\n    localStorage.removeItem(allCursorsKey);\n  }\n}\n\nexport async function findLastQueryCursor(\n  collection: CollectionReference,\n  queryBase: Query,\n  params: messageTypes.IParamsGetList,\n  resourceName: string,\n  flogger: IFirestoreLogger\n) {\n  const { page, perPage } = params.pagination;\n\n  let lastQueryCursor: DocumentSnapshot | false = false;\n  let currentPage = page - 1;\n\n  const currentPageParams = {\n    ...params,\n    pagination: {\n      ...params.pagination,\n    },\n  };\n  while (!lastQueryCursor && currentPage > 1) {\n    currentPage--;\n    currentPageParams.pagination.page = currentPage;\n    console.log('getting query cursor currentPage=', currentPage);\n    lastQueryCursor = await getQueryCursor(\n      collection,\n      currentPageParams,\n      resourceName,\n      flogger\n    );\n  }\n  const limit = (page - currentPage) * perPage;\n  const isFirst = currentPage === 1;\n\n  function getQuery() {\n    if (isFirst) {\n      return queryBase.limit(limit);\n    } else {\n      return queryBase.startAt(lastQueryCursor).limit(limit);\n    }\n  }\n\n  const newQuery = getQuery();\n  const snapshots = await newQuery.get();\n  const docsLength = snapshots.docs.length;\n  flogger.logDocument(docsLength)();\n  const lastDocIndex = docsLength - 1;\n  const lastDocRef = snapshots.docs[lastDocIndex];\n  return lastDocRef;\n}\n","import {\n  CollectionReference,\n  OrderByDirection,\n  Query,\n} from '@firebase/firestore-types';\nimport { IFirestoreLogger, messageTypes } from '../../misc';\nimport { findLastQueryCursor, getQueryCursor } from './queryCursors';\n\ninterface ParamsToQueryOptions {\n  filters?: boolean;\n  sort?: boolean;\n  pagination?: boolean;\n}\n\nconst defaultParamsToQueryOptions = {\n  filters: true,\n  sort: true,\n  pagination: true,\n};\n\nexport async function paramsToQuery<\n  TParams extends messageTypes.IParamsGetList\n>(\n  collection: CollectionReference,\n  params: TParams,\n  resourceName: string,\n  flogger: IFirestoreLogger,\n  options: ParamsToQueryOptions = defaultParamsToQueryOptions\n): Promise<Query> {\n  const filtersStepQuery = options.filters\n    ? filtersToQuery(collection, params.filter)\n    : collection;\n\n  const sortStepQuery = options.sort\n    ? sortToQuery(filtersStepQuery, params.sort)\n    : filtersStepQuery;\n\n  return options.pagination\n    ? paginationToQuery(\n        sortStepQuery,\n        params,\n        collection,\n        resourceName,\n        flogger\n      )\n    : sortStepQuery;\n}\n\nexport function filtersToQuery(\n  query: Query,\n  filters: { [fieldName: string]: any }\n): Query {\n  Object.keys(filters).forEach((fieldName) => {\n    query = query.where(fieldName, '==', filters[fieldName]);\n  });\n  return query;\n}\n\nexport function sortToQuery(\n  query: Query,\n  sort: { field: string; order: string }\n): Query {\n  if (sort != null && sort.field !== 'id') {\n    const { field, order } = sort;\n    const parsedOrder = order.toLocaleLowerCase() as OrderByDirection;\n    query = query.orderBy(field, parsedOrder);\n  }\n  return query;\n}\n\nasync function paginationToQuery<TParams extends messageTypes.IParamsGetList>(\n  query: Query,\n  params: TParams,\n  collection: CollectionReference,\n  resourceName: string,\n  flogger: IFirestoreLogger\n): Promise<Query> {\n  const { page, perPage } = params.pagination;\n  if (page === 1) {\n    query = query.limit(perPage);\n  } else {\n    let queryCursor = await getQueryCursor(\n      collection,\n      params,\n      resourceName,\n      flogger\n    );\n    if (!queryCursor) {\n      queryCursor = await findLastQueryCursor(\n        collection,\n        query,\n        params,\n        resourceName,\n        flogger\n      );\n    }\n    query = query.startAfter(queryCursor).limit(perPage);\n  }\n\n  return query;\n}\n\nexport function getFullParamsForQuery<\n  TParams extends messageTypes.IParamsGetList\n>(reactAdminParams: TParams, softdeleteEnabled: boolean): TParams {\n  return {\n    ...reactAdminParams,\n    filter: softdeleteEnabled\n      ? {\n          deleted: false,\n          ...reactAdminParams.filter,\n        }\n      : reactAdminParams.filter,\n  };\n}\n\nexport function getNextPageParams<TParams extends messageTypes.IParamsGetList>(\n  params: TParams\n): TParams {\n  return {\n    ...params,\n    pagination: {\n      ...params.pagination,\n      page: params.pagination.page + 1,\n    },\n  };\n}\n","import {\n  log,\n  messageTypes,\n  parseFireStoreDocument,\n  recursivelyMapStorageUrls,\n} from '../../misc';\nimport {\n  CollectionReference,\n  DocumentSnapshot,\n} from '@firebase/firestore-types';\nimport { IResource, ResourceManager } from '../database/ResourceManager';\nimport { RAFirebaseOptions } from '../options';\nimport * as ra from '../../misc/react-admin-models';\nimport {\n  getFullParamsForQuery,\n  getNextPageParams,\n  paramsToQuery,\n} from './paramsToQuery';\nimport { clearQueryCursors, setQueryCursor } from './queryCursors';\nimport { FireClient } from 'providers/database';\n\nexport class FirebaseLazyLoadingClient {\n  constructor(\n    private readonly options: RAFirebaseOptions,\n    private readonly rm: ResourceManager,\n    private client: FireClient\n  ) {}\n\n  public async apiGetList<T extends ra.Record>(\n    resourceName: string,\n    reactAdminParams: ra.GetListParams\n  ): Promise<ra.GetListResult<T>> {\n    const r = await this.tryGetResource(resourceName);\n    const params = getFullParamsForQuery(\n      reactAdminParams,\n      !!this.options.softDelete\n    );\n\n    log('apiGetListLazy', { resourceName, params });\n\n    const query = await paramsToQuery(\n      r.collection,\n      params,\n      resourceName,\n      this.client.flogger\n    );\n\n    const snapshots = await query.get();\n\n    const resultsCount = snapshots.docs.length;\n    if (!resultsCount) {\n      log('apiGetListLazy', {\n        message: 'There are not records for given query',\n      });\n      return { data: [], total: 0 };\n    }\n    this.client.flogger.logDocument(resultsCount)();\n\n    const data = snapshots.docs.map(parseFireStoreDocument) as T[];\n    const nextPageCursor = snapshots.docs[snapshots.docs.length - 1];\n    // After fetching documents save queryCursor for next page\n    setQueryCursor(nextPageCursor, getNextPageParams(params), resourceName);\n    // Hardcoded to allow next pages, as we don't have total number of items\n    let total = 9000;\n\n    // Check for next pages\n    // If it's last page, we can count all items and disable going to next page\n    const isOnLastPage = await this.checkIfOnLastPage(\n      r.collection,\n      params,\n      resourceName,\n      nextPageCursor\n    );\n\n    if (isOnLastPage) {\n      const { page, perPage } = params.pagination;\n      total = (page - 1) * perPage + data.length;\n      log('apiGetListLazy', { message: \"It's last page of collection.\" });\n    }\n\n    if (this.options.relativeFilePaths) {\n      const parsedData = await Promise.all(\n        data.map(async (doc: any) => {\n          for (let fieldName in doc) {\n            doc[fieldName] = await recursivelyMapStorageUrls(\n              this.client.fireWrapper,\n              doc[fieldName]\n            );\n          }\n          return doc;\n        })\n      );\n\n      log('apiGetListLazy result', {\n        docs: parsedData,\n        resource: r,\n        collectionPath: r.collection.path,\n      });\n\n      return {\n        data: parsedData,\n        total,\n      };\n    }\n\n    log('apiGetListLazy result', {\n      docs: data,\n      resource: r,\n      collectionPath: r.collection.path,\n    });\n\n    return { data, total };\n  }\n\n  public async apiGetManyReference(\n    resourceName: string,\n    reactAdminParams: messageTypes.IParamsGetManyReference\n  ): Promise<messageTypes.IResponseGetManyReference> {\n    const r = await this.tryGetResource(resourceName);\n    log('apiGetManyReferenceLazy', {\n      resourceName,\n      resource: r,\n      reactAdminParams,\n    });\n    const filterWithTarget = {\n      ...reactAdminParams.filter,\n      [reactAdminParams.target]: reactAdminParams.id,\n    };\n    const params = getFullParamsForQuery(\n      {\n        ...reactAdminParams,\n        filter: filterWithTarget,\n      },\n      !!this.options.softDelete\n    );\n\n    const query = await paramsToQuery(\n      r.collection,\n      params,\n      resourceName,\n      this.client.flogger\n    );\n\n    const snapshots = await query.get();\n    const resultsCount = snapshots.docs.length;\n    this.client.flogger.logDocument(resultsCount)();\n    const data = snapshots.docs.map(parseFireStoreDocument);\n    if (this.options.relativeFilePaths) {\n      const parsedData = await Promise.all(\n        data.map(async (doc: any) => {\n          for (let fieldName in doc) {\n            doc[fieldName] = await recursivelyMapStorageUrls(\n              this.client.fireWrapper,\n              doc[fieldName]\n            );\n          }\n          return doc;\n        })\n      );\n\n      log('apiGetManyReferenceLazy result', {\n        docs: parsedData,\n        resource: r,\n        collectionPath: r.collection.path,\n      });\n\n      return {\n        data: parsedData,\n        total: data.length,\n      };\n    }\n\n    log('apiGetManyReferenceLazy result', {\n      docs: data,\n      resource: r,\n      collectionPath: r.collection.path,\n    });\n    return { data, total: data.length };\n  }\n\n  private async checkIfOnLastPage<TParams extends messageTypes.IParamsGetList>(\n    collection: CollectionReference,\n    params: TParams,\n    resourceName: string,\n    nextPageCursor: DocumentSnapshot\n  ): Promise<boolean> {\n    const query = await paramsToQuery(\n      collection,\n      params,\n      resourceName,\n      this.client.flogger,\n      {\n        filters: true,\n        sort: true,\n      }\n    );\n    if (!nextPageCursor) {\n      throw new Error('Page cursor was empty...');\n    }\n    const nextElementSnapshot = await query\n      .startAfter(nextPageCursor)\n      .limit(1)\n      .get();\n\n    if (!nextElementSnapshot.empty) {\n      // this.incrementFirebaseReadsCounter(1);\n    }\n\n    return nextElementSnapshot.empty;\n  }\n\n  public clearQueryCursors(resourceName: string) {\n    clearQueryCursors(resourceName);\n  }\n\n  private async tryGetResource(\n    resourceName: string,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    return this.rm.TryGetResourcePromise(resourceName, collectionQuery);\n  }\n}\n","import { messageTypes } from './../misc/messageTypes';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { FirebaseAuth, User } from '@firebase/auth-types';\nimport { log, retrieveStatusTxt, logWarn, logger } from '../misc';\nimport { RAFirebaseOptions } from './options';\nimport { FirebaseWrapper } from './database/firebase/FirebaseWrapper';\nimport {\n  AuthProvider as RaAuthProvider,\n  UserIdentity,\n} from '../misc/react-admin-models';\n\nclass AuthClient {\n  private auth: FirebaseAuth;\n\n  constructor(firebaseConfig: {}, optionsInput?: RAFirebaseOptions) {\n    const options = optionsInput || {};\n    log('Auth Client: initializing...', { firebaseConfig, options });\n    const fireWrapper = new FirebaseWrapper();\n    fireWrapper.init(firebaseConfig, options);\n    this.auth = fireWrapper.auth();\n    options.persistence && this.setPersistence(options.persistence);\n  }\n\n  setPersistence(persistenceInput: 'session' | 'local' | 'none') {\n    let persistenceResolved: string;\n    switch (persistenceInput) {\n      case 'local':\n        persistenceResolved = firebase.auth.Auth.Persistence.LOCAL;\n        break;\n      case 'none':\n        persistenceResolved = firebase.auth.Auth.Persistence.NONE;\n        break;\n      case 'session':\n      default:\n        persistenceResolved = firebase.auth.Auth.Persistence.SESSION;\n        break;\n    }\n    log('setPersistence', { persistenceInput, persistenceResolved });\n    this.auth\n      .setPersistence(persistenceResolved)\n      .catch((error) => console.error(error));\n  }\n\n  public async HandleAuthLogin(params: { username: string; password: string }) {\n    const { username, password } = params;\n\n    if (username && password) {\n      try {\n        const user = await this.auth.signInWithEmailAndPassword(\n          username,\n          password\n        );\n        log('HandleAuthLogin: user sucessfully logged in', { user });\n        return user;\n      } catch (e) {\n        log('HandleAuthLogin: invalid credentials', { params });\n        throw new Error('Login error: invalid credentials');\n      }\n    } else {\n      return this.getUserLogin();\n    }\n  }\n\n  public HandleAuthLogout() {\n    return this.auth.signOut();\n  }\n\n  public HandleAuthError(errorHttp: messageTypes.HttpErrorType) {\n    log('HandleAuthLogin: invalid credentials', { errorHttp });\n    const status = !!errorHttp && errorHttp.status;\n    const statusTxt = retrieveStatusTxt(status);\n    if (statusTxt === 'ok') {\n      log('API is actually authenticated');\n      return Promise.resolve();\n    }\n    logWarn('Recieved authentication error from API');\n    return Promise.reject();\n  }\n\n  public async HandleAuthCheck(): Promise<void> {\n    return this.getUserLogin() as any; // Prevents breaking change\n  }\n\n  public getUserLogin(): Promise<User> {\n    return new Promise((resolve, reject) => {\n      if (this.auth.currentUser) return resolve(this.auth.currentUser);\n      const unsubscribe = this.auth.onAuthStateChanged((user) => {\n        unsubscribe();\n        if (user) {\n          resolve(user);\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  public async HandleGetPermissions() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.claims;\n    } catch (e) {\n      log('HandleGetPermission: no user is logged in or tokenResult error', {\n        e,\n      });\n      return null;\n    }\n  }\n\n  public async HandleGetIdentity(): Promise<UserIdentity> {\n    try {\n      const { uid, displayName, photoURL } = await this.getUserLogin();\n      const identity: UserIdentity = {\n        id: uid,\n        fullName: `${displayName ?? ''}`,\n        avatar: `${photoURL ?? ''}`,\n      };\n      return identity;\n    } catch (e) {\n      log('HandleGetIdentity: no user is logged in', {\n        e,\n      });\n      return null as any;\n    }\n  }\n\n  public async HandleGetJWTAuthTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.authTime;\n    } catch (e) {\n      log('HandleGetJWTAuthTime: no user is logged in or tokenResult error', {\n        e,\n      });\n      return null;\n    }\n  }\n\n  public async HandleGetJWTExpirationTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.expirationTime;\n    } catch (e) {\n      log(\n        'HandleGetJWTExpirationTime: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTSignInProvider() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.signInProvider;\n    } catch (e) {\n      log(\n        'HandleGetJWTSignInProvider: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTIssuedAtTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.issuedAtTime;\n    } catch (e) {\n      log(\n        'HandleGetJWTIssuedAtTime: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTToken() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.token;\n    } catch (e) {\n      log(\n        'HandleGetJWTIssuedAtTime: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n}\n\nexport function AuthProvider(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n): RaAuthProvider {\n  VerifyAuthProviderArgs(firebaseConfig, options);\n  logger.SetEnabled(!!options?.logging);\n  const auth = new AuthClient(firebaseConfig, options);\n\n  const provider: RaAuthProvider = {\n    // React Admin Interface\n    login: (params) => auth.HandleAuthLogin(params),\n    logout: () => auth.HandleAuthLogout(),\n    checkAuth: () => auth.HandleAuthCheck(),\n    checkError: (error) => auth.HandleAuthError(error),\n    getPermissions: () => auth.HandleGetPermissions(),\n    getIdentity: () => auth.HandleGetIdentity(),\n    // Custom Functions\n    getAuthUser: () => auth.getUserLogin(),\n    getJWTAuthTime: () => auth.HandleGetJWTAuthTime(),\n    getJWTExpirationTime: () => auth.HandleGetJWTExpirationTime(),\n    getJWTSignInProvider: () => auth.HandleGetJWTSignInProvider(),\n    getJWTClaims: () => auth.HandleGetPermissions(),\n    getJWTToken: () => auth.HandleGetJWTToken(),\n  };\n  return provider;\n}\n\nfunction VerifyAuthProviderArgs(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n) {\n  const hasNoApp = !options || !options.app;\n  const hasNoConfig = !firebaseConfig;\n  if (hasNoConfig && hasNoApp) {\n    throw new Error(\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\n    );\n  }\n}\n","// From firebase SDK\n\nimport { logError } from \"./logger\";\n\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\nexport function retrieveStatusTxt(status: number): 'ok' | 'unauthenticated' {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 401: // 'unauthenticated'\n    case 403: // 'permission-denied'\n      return 'unauthenticated';\n\n    case 0: // 'internal'\n    case 400: // 'invalid-argument'\n    case 404: // 'not-found'\n    case 409: // 'aborted'\n    case 429: // 'resource-exhausted'\n    case 499: // 'cancelled'\n    case 500: // 'internal'\n    case 501: // 'unimplemented'\n    case 503: // 'unavailable'\n    case 504: // 'deadline-exceeded'\n    default:\n      // ignore\n      return 'ok';\n  }\n}\n\n// From firebase SDK\n// tslint:disable-next-line:max-line-length\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\nexport function retrieveStatusCode(statusTxt: string): number {\n  // Make sure any successful status is OK.\n  const regexResult = /\\[code\\=([\\w-]*)/g.exec(statusTxt);\n  const status = Array.isArray(regexResult) && regexResult[1];\n  if (!status) {\n    logError('unknown StatusCode ', {statusTxt});\n  }\n  switch (status) {\n    case 'unauthenticated':\n      return 401;\n    case 'permission-denied':\n      return 403;\n    case 'internal':\n      return 0;\n    case 'invalid-argument':\n      return 400;\n    case 'not-found':\n      return 404;\n    case 'aborted':\n      return 409;\n    case 'resource-exhausted':\n      return 429;\n    case 'cancelled':\n      return 499;\n    case 'internal':\n      return 500;\n    case 'unimplemented':\n      return 501;\n    case 'unavailable':\n      return 503;\n    case 'deadline-exceeded':\n      return 504;\n    default:\n      return 200;\n  }\n}\n","import {\n  getAbsolutePath,\n  log,\n  logger,\n  retrieveStatusCode,\n  logError,\n  MakeFirestoreLogger,\n} from \"../misc\";\nimport * as ra from \"../misc/react-admin-models\";\nimport { RAFirebaseOptions } from \"./options\";\nimport { FirebaseWrapper } from \"./database/firebase/FirebaseWrapper\";\nimport { FireApp } from \"./database/firebase/IFirebaseWrapper\";\nimport { FireClient } from \"./database/FireClient\";\nimport { GetList, GetMany, GetManyReference, GetOne } from \"./queries\";\nimport { Create, Delete, DeleteMany, Update, UpdateMany } from \"./commands\";\n\nexport interface IDataProvider extends ra.DataProvider {\n  app: FireApp;\n}\n\nexport function DataProvider(\n  firebaseConfig: {},\n  optionsInput?: RAFirebaseOptions\n): IDataProvider {\n  const options = optionsInput || {};\n  verifyDataProviderArgs(firebaseConfig, options);\n\n  const flogger = MakeFirestoreLogger(options);\n  logger.SetEnabled(!!options?.logging);\n  flogger.SetEnabled(!!options?.firestoreCostsLogger?.enabled);\n  flogger.ResetCount(!options?.firestoreCostsLogger?.persistCount);\n  log('Creating FirebaseDataProvider', {\n    firebaseConfig,\n    options\n  });\n\n  const fireWrapper = new FirebaseWrapper();\n  fireWrapper.init(firebaseConfig, optionsInput);\n\n  async function run<T>(cb: () => Promise<T>) {\n    let res: any;\n    try {\n      res = await cb();\n      return res;\n    } catch (error) {\n      const errorMsg = error.toString();\n      const code = retrieveStatusCode(errorMsg);\n      const errorObj = { status: code, message: errorMsg, json: res };\n      logError(\"DataProvider:\", error, { errorMsg, code, errorObj });\n      throw errorObj;\n    }\n  }\n  const client = new FireClient(fireWrapper, options, flogger);\n\n  const newProviderApi: IDataProvider = {\n    app: fireWrapper.GetApp(),\n    getList<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.GetListParams\n    ): Promise<ra.GetListResult<RecordType>> {\n      return run(() => GetList<RecordType>(resource, params, client));\n    },\n    getOne<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.GetOneParams\n    ): Promise<ra.GetOneResult<RecordType>> {\n      return run(() => GetOne<RecordType>(resource, params, client));\n    },\n    getMany<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.GetManyParams\n    ): Promise<ra.GetManyResult<RecordType>> {\n      return run(() => GetMany<RecordType>(resource, params, client));\n    },\n    getManyReference<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.GetManyReferenceParams\n    ): Promise<ra.GetManyReferenceResult<RecordType>> {\n      return run(() =>\n        GetManyReference<RecordType>(resource, params, client)\n      );\n    },\n    update<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.UpdateParams\n    ): Promise<ra.UpdateResult<RecordType>> {\n      return run(() => Update<RecordType>(resource, params, client));\n    },\n    updateMany(\n      resource: string,\n      params: ra.UpdateManyParams\n    ): Promise<ra.UpdateManyResult> {\n      return run(() => UpdateMany(resource, params, client));\n    },\n    create<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.CreateParams\n    ): Promise<ra.CreateResult<RecordType>> {\n      return run(() => Create<RecordType>(resource, params, client));\n    },\n    delete<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.DeleteParams\n    ): Promise<ra.DeleteResult<RecordType>> {\n      return run(() => Delete(resource, params, client));\n    },\n    deleteMany(\n      resource: string,\n      params: ra.DeleteManyParams\n    ): Promise<ra.DeleteManyResult> {\n      return run(() => DeleteMany(resource, params, client));\n    },\n  };\n\n  return newProviderApi;\n}\n\nfunction verifyDataProviderArgs(\n  firebaseConfig: {},\n  options?: RAFirebaseOptions\n) {\n  const hasNoApp = !options || !options.app;\n  const hasNoConfig = !firebaseConfig;\n  if (hasNoConfig && hasNoApp) {\n    throw new Error(\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\n    );\n  }\n  if (options && options.rootRef) {\n    // Will throw error if rootRef doesn't point to a document\n    getAbsolutePath(options.rootRef, 'test');\n  }\n}\n","import { FireClient } from '../database/FireClient';\nimport { FirebaseLazyLoadingClient } from '../lazy-loading/FirebaseLazyLoadingClient';\nimport {\n  filterArray,\n  log,\n  recursivelyMapStorageUrls,\n  sortArray,\n} from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\n\nexport async function GetList<T extends ra.Record>(\n  resourceName: string,\n  params: ra.GetListParams,\n  client: FireClient\n): Promise<ra.GetListResult<T>> {\n  log('GetList', { resourceName, params });\n  const { rm, fireWrapper, options } = client;\n\n  if (options?.lazyLoading?.enabled) {\n    const lazyClient = new FirebaseLazyLoadingClient(\n      options,\n      rm,\n      client\n    );\n    return lazyClient.apiGetList<T>(resourceName, params);\n  }\n\n  const filterSafe = params.filter || {};\n\n  const collectionQuery = filterSafe.collectionQuery;\n  delete filterSafe.collectionQuery;\n\n  const r = await rm.TryGetResource(resourceName, 'REFRESH', collectionQuery);\n  const data = r.list;\n  if (params.sort != null) {\n    const { field, order } = params.sort;\n    if (order === 'ASC') {\n      sortArray(data, field, 'asc');\n    } else {\n      sortArray(data, field, 'desc');\n    }\n  }\n  let softDeleted = data;\n  if (options.softDelete && !Object.keys(filterSafe).includes('deleted')) {\n    softDeleted = data.filter((doc) => !doc.deleted);\n  }\n  const filteredData = filterArray(softDeleted, filterSafe);\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\n  const pageEnd = pageStart + params.pagination.perPage;\n  const dataPage = filteredData.slice(pageStart, pageEnd) as T[];\n  const total = filteredData.length;\n\n  if (options.relativeFilePaths) {\n    const data = await Promise.all(\n      dataPage.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\n    );\n    return {\n      data,\n      total,\n    };\n  }\n\n  return {\n    data: dataPage,\n    total,\n  };\n}\n","import { FireClient } from '../database/FireClient';\nimport { log, recursivelyMapStorageUrls } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\n\nexport async function GetOne<T extends ra.Record>(\n  resourceName: string,\n  params: ra.GetOneParams,\n  client: FireClient\n): Promise<ra.GetOneResult<T>> {\n  log('GetOne', { resourceName, params });\n  const { rm, fireWrapper } = client;\n  try {\n    const id = params.id + '';\n    const dataSingle = await rm.GetSingleDoc(resourceName, id);\n    client.flogger.logDocument(1)();\n    const data = await recursivelyMapStorageUrls(fireWrapper, dataSingle);\n    return { data: data };\n  } catch (error) {\n    throw new Error(\n      'Error getting id: ' + params.id + ' from collection: ' + resourceName\n    );\n  }\n}\n","import { FireClient } from '../database/FireClient';\nimport { log, recursivelyMapStorageUrls } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\n\nexport async function GetMany<T extends ra.Record>(\n  resourceName: string,\n  params: ra.GetManyParams,\n  client: FireClient\n): Promise<ra.GetManyResult<T>> {\n  const { rm, options, fireWrapper } = client;\n  const r = await rm.TryGetResource(resourceName);\n  log('GetMany', { resourceName, resource: r, params });\n  const ids = params.ids;\n  const matchDocSnaps = await Promise.all(\n    ids.map((id) => r.collection.doc(id + '').get())\n  );\n  client.flogger.logDocument(ids.length)();\n  const matches = matchDocSnaps.map((snap) => {\n    return { ...snap.data(), id: snap.id } as T;\n  });\n  const permittedData = options.softDelete\n    ? matches.filter((row) => !row['deleted'])\n    : matches;\n  if (options.relativeFilePaths) {\n    const data = await Promise.all(\n      permittedData.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\n    );\n    return {\n      data,\n    };\n  }\n\n  return {\n    data: permittedData,\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { filterArray, log, recursivelyMapStorageUrls, sortArray } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function GetManyReference<T extends ra.Record>(\n  resourceName: string,\n  params: ra.GetManyReferenceParams,\n  client: FireClient\n): Promise<ra.GetManyReferenceResult<T>> {\n  const { rm, options, fireWrapper } = client;\n  log(\"GetManyReference\", { resourceName, params });\n  const filterSafe = params.filter || {};\n  const collectionQuery = filterSafe.collectionQuery;\n  const r = await rm.TryGetResource(\n    resourceName,\n    \"REFRESH\",\n    collectionQuery\n  );\n  delete filterSafe.collectionQuery;\n  log(\"apiGetManyReference\", { resourceName, resource: r, params });\n  const data = r.list;\n  const targetField = params.target;\n  const targetValue = params.id;\n  let softDeleted = data;\n  if (options.softDelete) {\n    softDeleted = data.filter(doc => !doc['deleted'])\n  }\n  const filteredData = filterArray(softDeleted, filterSafe);\n  const targetIdFilter = {} as any;\n  targetIdFilter[targetField] = targetValue;\n  const permittedData = filterArray(filteredData, targetIdFilter);\n  if (params.sort != null) {\n    const { field, order } = params.sort;\n    if (order === \"ASC\") {\n      sortArray(permittedData, field, \"asc\");\n    } else {\n      sortArray(permittedData, field, \"desc\");\n    }\n  }\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\n  const pageEnd = pageStart + params.pagination.perPage;\n  const dataPage = permittedData.slice(pageStart, pageEnd) as T[];\n  const total = permittedData.length;\n\n  if (options.relativeFilePaths) {\n    const data = await Promise.all(\n      permittedData.map((doc) =>\n        recursivelyMapStorageUrls(fireWrapper, doc)\n      )\n    );\n    return { data, total };\n  }\n\n  return { data: dataPage, total };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function Update<T extends ra.Record>(\n  resourceName: string,\n  params: ra.UpdateParams,\n  client: FireClient\n): Promise<ra.UpdateResult<T>> {\n  const { rm } = client;\n  log(\"Update\", { resourceName, params });\n  const id = params.id + \"\";\n  delete params.data.id;\n  const r = await rm.TryGetResource(resourceName);\n  log(\"Update\", { resourceName, resource: r, params });\n  const data = await client.parseDataAndUpload(r, id, params.data);\n  const docObj = { ...data };\n  client.checkRemoveIdField(docObj, id);\n  await client.addUpdatedByFields(docObj);\n  await r.collection.doc(id).update(docObj);\n  return {\n    data: {\n      ...data,\n      id: id,\n    },\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function UpdateMany(\n  resourceName: string,\n  params: ra.UpdateManyParams,\n  client: FireClient\n): Promise<ra.UpdateManyResult> {\n  const { rm } = client;\n  log(\"UpdateMany\", { resourceName, params });\n  delete params.data.id;\n  const r = await rm.TryGetResource(resourceName);\n  log(\"UpdateMany\", { resourceName, resource: r, params });\n  const ids = params.ids;\n  const returnData = await Promise.all(\n    ids.map(async id => {\n      const idStr = id+'';\n      const data = await client.parseDataAndUpload(r, idStr, params.data);\n      const docObj = { ...data };\n      client.checkRemoveIdField(docObj, idStr);\n      await client.addUpdatedByFields(docObj);\n      await r.collection\n        .doc(idStr)\n        .update(docObj);\n      return {\n        ...data,\n        id: idStr\n      };\n    })\n  );\n  return {\n    data: returnData\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function Create<T extends ra.Record>(\n  resourceName: string,\n  params: ra.CreateParams,\n  client: FireClient\n): Promise<ra.CreateResult<T>> {\n  const { rm, fireWrapper } = client;\n  const r = await rm.TryGetResource(resourceName);\n  log(\"Create\", { resourceName, resource: r, params });\n  const hasOverridenDocId = params.data && params.data.id;\n  log(\"Create\", { hasOverridenDocId });\n  if (hasOverridenDocId) {\n    const overridenId = params.data.id;\n    const exists = (await r.collection.doc(overridenId).get()).exists;\n    if (exists) {\n      throw new Error(\n        `the id:\"${overridenId}\" already exists, please use a unique string if overriding the 'id' field`\n      );\n    }\n    const data = await client.parseDataAndUpload(r, overridenId, params.data);\n    if (!overridenId) {\n      throw new Error(\"id must be a valid string\");\n    }\n    const docObj = { ...data };\n    client.checkRemoveIdField(docObj, overridenId);\n    await client.addCreatedByFields(docObj);\n    await client.addUpdatedByFields(docObj);\n    log(\"Create\", { docObj });\n    await r.collection.doc(overridenId).set(docObj, { merge: false });\n    return {\n      data: {\n        ...data,\n        id: overridenId,\n      },\n    };\n  }\n  const newId = fireWrapper.db().collection(\"collections\").doc().id;\n  const data = await client.parseDataAndUpload(r, newId, params.data);\n  const docObj = { ...data };\n  client.checkRemoveIdField(docObj, newId);\n  await client.addCreatedByFields(docObj);\n  await client.addUpdatedByFields(docObj);\n  await r.collection.doc(newId).set(docObj, { merge: false });\n  return {\n    data: {\n      ...data,\n      id: newId,\n    },\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\nimport { DeleteSoft } from \"./Delete.Soft\";\n\nexport async function Delete<T extends ra.Record>(\n  resourceName: string,\n  params: ra.DeleteParams,\n  client: FireClient\n): Promise<ra.DeleteResult<T>> {\n  const { rm, options } = client;\n  if (options.softDelete) {\n    return DeleteSoft(resourceName, params, client);\n  }\n  const r = await rm.TryGetResource(resourceName);\n  log(\"apiDelete\", { resourceName, resource: r, params });\n  try {\n    const id = params.id + \"\";\n    await r.collection.doc(id).delete();\n  } catch (error) {\n    throw new Error(error);\n  }\n  return {\n    data: params.previousData as T,\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log, logError } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function DeleteSoft<T extends ra.Record>(\n  resourceName: string,\n  params: ra.DeleteParams,\n  client: FireClient\n): Promise<ra.DeleteResult<T>> {\n  const { rm } = client;\n  const id = params.id + \"\";\n  const r = await rm.TryGetResource(resourceName);\n  log(\"DeleteSoft\", { resourceName, resource: r, params });\n  const docObj = { deleted: true };\n  await client.addUpdatedByFields(docObj);\n  r.collection\n    .doc(id)\n    .update(docObj)\n    .catch((error) => {\n      logError(\"DeleteSoft error\", { error });\n    });\n  return {\n    data: params.previousData as T,\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\nimport { DeleteManySoft } from \"./DeleteMany.Soft\";\n\ntype DocumentRef = firebase.firestore.DocumentReference<any>;\n\nexport async function DeleteMany(\n  resourceName: string,\n  params: ra.DeleteManyParams,\n  client: FireClient\n): Promise<ra.DeleteManyResult> {\n  const { options, rm, fireWrapper } = client;\n  if (options.softDelete) {\n    return DeleteManySoft(resourceName, params, client);\n  }\n  const r = await rm.TryGetResource(resourceName);\n  log(\"DeleteMany\", { resourceName, resource: r, params });\n  const returnData: ra.Identifier[] = [];\n  const batch = fireWrapper.db().batch();\n  for (const id of params.ids) {\n    const idStr = id + '';\n    const docToDelete = r.collection.doc(idStr) as DocumentRef;\n    batch.delete(docToDelete);\n    returnData.push(id);\n  }\n  try {\n    await batch.commit();\n  } catch (error) {\n    throw new Error(error)\n  }\n  return { data: returnData };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log, logError } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function DeleteManySoft(\n  resourceName: string,\n  params: ra.DeleteManyParams,\n  client: FireClient\n): Promise<ra.DeleteManyResult> {\n  const { rm } = client;\n  const r = await rm.TryGetResource(resourceName);\n  log(\"DeleteManySoft\", { resourceName, resource: r, params });\n  const ids = params.ids;\n  const returnData = await Promise.all(\n    ids.map(async (id) => {\n      const idStr = id + \"\";\n      const docObj = { deleted: true };\n      await client.addUpdatedByFields(docObj);\n      r.collection\n        .doc(idStr)\n        .update(docObj)\n        .catch((error) => {\n          logError(\"apiSoftDeleteMany error\", { error });\n        });\n      return idStr;\n    })\n  );\n  return {\n    data: returnData,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}